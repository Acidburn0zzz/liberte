#!/bin/sh -e

sinfo() {
    echo ${BASH:+-e} "\033[1;33;41m$@\033[0m"
}


# Must have root directory as an argument
if [ -z "$1" ]; then
    echo "$0 <livecd root> [copy] [-c shell command...]"
    exit 1
fi


# Variables
SRC=`dirname $0`/src
RSYNC="rsync -rlptOHS"

version=`cat ${SRC}/../conf/version`
environment="VERSION=${version} LOGNAME=root USER=root HOME=/root HOSTNAME=liberte"
for env in LANG TERM RSYNC_PROXY http_proxy https_proxy ftp_proxy no_proxy; do
    if printenv ${env} 1>/dev/null; then
        environment="${environment} ${env}=`printenv ${env}`"
    fi
done


# Tweak target directory if alternative is given,
# otherwise, synchronize configuration
if [ "$2" = copy ]; then
    PHASE=$2
    LIVECD=$1/${PHASE}
    shift 2
else
    PHASE=src
    LIVECD=$1/${PHASE}
    shift

    # NOTE: non-pruned files: /, /etc/portage/gnupg, /etc/privoxy, /var/lib/portage
    #                         /home/anon/persist/security/pgp/*.{gpg,crt}

    # Specify permissions completely, to be independent from ${SRC}/* chmods
    sinfo "Copying configuration files:"
    ${RSYNC} --chmod=u=rwX,go=rX -i        \
          --exclude=/root/                 \
          --exclude=/home/anon/            \
          --exclude=/home/nofw/            \
          --exclude=/var/lib/i2p/          \
          --exclude=/var/lib/portage/      \
          --exclude=/etc/nginx/            \
          --exclude=/var/run/lid-events    \
          --exclude=/var/run/htpdate       \
          --exclude=/etc/sudoers           \
          --exclude=/etc/sysctl.conf       \
          --exclude=/etc/autofs/.auto.lock \
          --exclude=/etc/portage/gnupg/ -C ${SRC}/ ${LIVECD}

    ${RSYNC} --chmod=u=rwX,go=   -i --delete-excluded -C ${SRC}/root              ${LIVECD}
    ${RSYNC} --chmod=u=rwX,go=   -i                   -C ${SRC}/etc/portage/gnupg ${LIVECD}/etc/portage
    ${RSYNC} --chmod=u=rwX,go=rX,Dg+s -i              -C ${SRC}/var/lib/portage   ${LIVECD}/var/lib
    ${RSYNC} --chmod=u=rwX,go=   -i                   -C ${SRC}/etc/nginx         ${LIVECD}/etc

    if [ -e ${LIVECD}/tmp/nginx-ref ]; then
        chown -h --from=0:0 --reference=${LIVECD}/tmp/nginx-ref \
              ${LIVECD}/var/log/nginx ${LIVECD}/var/tmp/nginx   \
              ${LIVECD}/var/tmp/nginx/client ${LIVECD}/var/tmp/nginx/fastcgi
    fi

    if [ -e ${LIVECD}/var/log/privoxy ]; then
        chown -hR --from=`stat -c %u:%g ${LIVECD}/var/log/privoxy` 0:0 ${LIVECD}/etc/privoxy
    fi

    ${RSYNC} --chmod=u=rwX,g=rX,o= -i                -C ${SRC}/var/run/lid-events ${LIVECD}/var/run
    chown -hR --from=0:0 :`grep video ${LIVECD}/etc/group | cut -d: -f3` ${LIVECD}/var/run/lid-events

    ${RSYNC} --chmod=u=rwX,g=rX,o= -i                -C ${SRC}/var/run/htpdate    ${LIVECD}/var/run
    if [ -e ${LIVECD}/tmp/htp-ref ]; then
        chown -h --from=0:0 --reference=${LIVECD}/tmp/htp-ref ${LIVECD}/var/run/htpdate
    fi

    ${RSYNC} --chmod=ug=r,o=     -i ${SRC}/etc/sudoers           ${LIVECD}/etc
    ${RSYNC} --chmod=u=rw,g=r,o= -i ${SRC}/etc/sysctl.conf       ${LIVECD}/etc
    ${RSYNC} --chmod=u=rw,go=    -i ${SRC}/etc/autofs/.auto.lock ${LIVECD}/etc/autofs

    mkdir -p -m 755 ${LIVECD}/usr/local/addons
    ${RSYNC} --chmod=u=rwX,go=rX -i --delete-excluded -C ${LIVECD}/../mirror/keys ${LIVECD}/usr/local/addons

    # rwX------
    ${RSYNC} --chmod=u=rwX,go=   -i --delete \
          --exclude=/anon/persist/security/pgp/\*.gpg --exclude=/anon/persist/security/pgp/\*.crt \
          --exclude=/anon/persist/cables/queue        --exclude=/anon/persist/cables/rqueue       \
          --exclude=/anon/persist/mail/inbox          -C ${SRC}/home/anon ${LIVECD}/home
    ${RSYNC} --chmod=ug=rwX,o=,Do+t -i --delete-excluded \
        -C ${SRC}/home/anon/persist/cables/queue ${SRC}/home/anon/persist/cables/rqueue \
        ${LIVECD}/home/anon/persist/cables
    ${RSYNC} --chmod=ug=rwX,o=,Do+t -i --delete-excluded \
        -C ${SRC}/home/anon/persist/mail/inbox   ${LIVECD}/home/anon/persist/mail
    chown -hR --from=0:0 2101:9000 ${LIVECD}/home/anon

    ${RSYNC} --chmod=u=rwX,go=   -i --delete-excluded -C ${SRC}/home/nofw ${LIVECD}/home
    chown -hR --from=0:0 2102:9001 ${LIVECD}/home/nofw

    ${RSYNC} --chmod=u=rwX,go=   -i --delete \
          --exclude=/i2p/router/netDb/                -C ${SRC}/var/lib/i2p ${LIVECD}/var/lib
    if [ -e ${LIVECD}/tmp/i2p-ref ]; then
        chown -hR --from=0:0 --reference=${LIVECD}/tmp/i2p-ref ${LIVECD}/var/lib/i2p
    fi

    if [ -e /etc/resolv.conf ]; then
        ${RSYNC} --chmod=u=rw,go=r   -i /etc/resolv.conf       ${LIVECD}/etc
    fi

    if [ -e ${LIVECD}/usr/bin/xcdroast ]; then
        find ${LIVECD}/usr/lib/xcdroast-*/bin/xcdrwrap ! -perm 4755 -exec chmod 4755 {} \;
    fi

    if [ -e ${LIVECD}/var/log/nginx ]; then
        find ${LIVECD}/var/log/nginx -maxdepth 0         ! -perm 2750 -exec chmod 2750 {} \;
        find ${LIVECD}/var/tmp/nginx -maxdepth 1 -type d ! -perm  750 -exec chmod  750 {} \;
    fi
fi
environment="${environment} PHASE=${PHASE}"

setarch=`which setarch`
chroot=`which chroot`
tty=`tty`


sinfo "Mounting system directories"

if [ "${tty#/dev/pts/}" = "${tty}" ]; then
    touch ${LIVECD}${tty}
else
    tty=
fi
for dir in /proc /dev/null /dev/random /dev/urandom /dev/ptmx /dev/pts ${tty}; do
    mount -B ${dir} ${LIVECD}${dir}
done
mount -o remount,ro ${LIVECD}/proc

if [ ${PHASE} = copy -a -d ${LIVECD}/usr/portage ]; then
    mount -B ${LIVECD}/../src/usr/portage ${LIVECD}/usr/portage
    mount -o remount,ro ${LIVECD}/usr/portage
fi

if [ -d /usr/portage/distfiles -a -d ${LIVECD}/usr/portage/distfiles ]; then
    mount -B /usr/portage/distfiles ${LIVECD}/usr/portage/distfiles
fi


sinfo "Environment:"
echo "${environment}" | tr ' ' '\n' | sed 's/^/    /'


sinfo "Launching chrooted shell in ${LIVECD}"
retval=0
env -i ${environment} "${setarch}" i686 "${chroot}" ${LIVECD} /bin/bash -l "$@" || retval=$?
if [ ${retval} != 0 ]; then
    sinfo "Failed."
fi


sinfo "Unmounting system directories"

if [ -d /usr/portage/distfiles -a -d ${LIVECD}/usr/portage/distfiles ]; then
    umount ${LIVECD}/usr/portage/distfiles
fi

if [ -d ${LIVECD}/usr/portage -a ${PHASE} = copy ]; then
    umount ${LIVECD}/usr/portage
fi

for dir in ${tty} /dev/pts /dev/ptmx /dev/urandom /dev/random /dev/null /proc; do
    umount -l ${LIVECD}${dir}
done
# Condition is false for empty ${tty} and for block-device ${tty} (i.e., mounted in another session)
if [ -f ${LIVECD}${tty} ]; then
    rm ${LIVECD}${tty}
fi


exit ${retval}
