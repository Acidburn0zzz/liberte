#!/bin/sh -e

sinfo() {
    echo ${BASH:+-e} "\033[1;33;41m$@\033[0m"
}


# Must have root directory as an argument
if [ -z "$1" ]; then
    echo "$0 <livecd root> [copy] [-c shell command...]"
    exit 1
fi


# Variables
SRC=`dirname $0`/src

version=`cat ${SRC}/../version`
environment="VERSION=${version} LOGNAME=root USER=root HOME=/root HOSTNAME=liberte"
for env in LANG TERM RSYNC_PROXY http_proxy https_proxy ftp_proxy no_proxy; do
    if printenv ${env} 1>/dev/null; then
        environment="${environment} ${env}=`printenv ${env}`"
    fi
done


# Tweak target directory if alternative is given,
# otherwise, synchronize configuration
if [ "$2" = copy ]; then
    PHASE=$2
    LIVECD=$1/${PHASE}
    shift 2
else
    PHASE=src
    LIVECD=$1/${PHASE}
    shift

    # NOTE: non-pruned files: /, /etc/portage/gnupg, /home/anon/persist/security/pgp/*.gpg

    # Specify permissions completely, to be independent from ${SRC}/* chmods
    sinfo "Copying configuration files:"
    rsync -rltOHS --chmod=u=rwX,go=rX -i \
          --exclude=/root/ --exclude=/home/anon/ --exclude=/home/nofw/ --exclude=/mnt/hidden/ --exclude=/etc/sudoers \
          --exclude=/etc/.auto.lock --exclude=/etc/portage/gnupg/ -C ${SRC}/ ${LIVECD}
    rsync -rltOHS --chmod=u=rwX,go=   -i --delete-excluded -C ${SRC}/root              ${LIVECD}
    rsync -rltOHS --chmod=u=rwX,go=   -i                   -C ${SRC}/etc/portage/gnupg ${LIVECD}/etc/portage
    rsync -rltOHS --chmod=u=rwX,go=   -i --delete-excluded -C ${SRC}/mnt/hidden        ${LIVECD}/mnt

    rsync -rltOHS --chmod=ug=r,o=     -i ${SRC}/etc/sudoers    ${LIVECD}/etc
    rsync -rltOHS --chmod=u=rw,go=    -i ${SRC}/etc/.auto.lock ${LIVECD}/etc

    mkdir -p -m 755 ${LIVECD}/usr/local/addons
    rsync -rltOHS --chmod=u=rwX,go=rX -i --delete-excluded -C ${LIVECD}/../mirror/keys ${LIVECD}/usr/local/addons

    # rwX------
    rsync -rltOHS --chmod=u=rwX,go= -i --delete \
          --exclude=/anon/persist/security/pgp/\*.gpg --exclude=/anon/persist/security/pgp/\*.crt \
          -C ${SRC}/home/anon ${LIVECD}/home
    find ${LIVECD}/home/anon ! \( -user 2101 -group 9000 \) -exec chown -h 2101:9000 {} \;

    rsync -rltOHS --chmod=u=rwX,go= -i --delete-excluded \
          -C ${SRC}/home/nofw ${LIVECD}/home
    find ${LIVECD}/home/nofw ! \( -user 2102 -group 9001 \) -exec chown -h 2102:9001 {} \;
fi
environment="${environment} PHASE=${PHASE}"


sinfo "Mounting system directories"
for dir in proc sys dev dev/pts dev/shm; do
    mount -B /${dir} ${LIVECD}/${dir}
done
if [ ${PHASE} = copy -a -d ${LIVECD}/usr/portage ]; then
    mount -B ${LIVECD}/../src/usr/portage ${LIVECD}/usr/portage
    mount -o remount,ro ${LIVECD}/usr/portage
fi
if [ -d /usr/portage/distfiles -a -d ${LIVECD}/usr/portage/distfiles ]; then
    mount -B /usr/portage/distfiles ${LIVECD}/usr/portage/distfiles
fi


sinfo "Environment:"
echo "${environment}" | tr ' ' '\n' | sed 's/^/    /'


sinfo "Launching chrooted shell in ${LIVECD}"
retval=0
env -i ${environment} setarch i686 chroot ${LIVECD} /bin/bash -l "$@" || retval=$?
if [ ${retval} != 0 ]; then
    sinfo "Failed."
fi


sinfo "Unmounting system directories"
if [ -d /usr/portage/distfiles -a -d ${LIVECD}/usr/portage/distfiles ]; then
    umount ${LIVECD}/usr/portage/distfiles
fi
if [ -d ${LIVECD}/usr/portage -a ${PHASE} = copy ]; then
    umount ${LIVECD}/usr/portage
fi
for dir in dev/shm dev/pts dev sys proc; do
    umount ${LIVECD}/${dir}
done


exit ${retval}
