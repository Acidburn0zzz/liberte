#!/bin/sh -e

sinfo() {
    echo ${BASH:+-e} "\033[1;33;41m$@\033[0m"
}


# Must have root directory as an argument
if [ -z "$1" ]; then
    echo "$0 <livecd root>"
    exit 1
fi


# Variables
SRC=`dirname $0`
LIVECD=$1/copy
USBROOT=$1/dist/liberte

version=`cat ${SRC}/conf/version`
distname=liberte-${version}
sysver=`cat ${LIVECD}/boot/syslinux/version`
mksqver=4.1

# see the /root/bin/ps-mount script
vfatflags=noatime,noexec,flush,iocharset=iso8859-1,utf8,uid=2101,gid=9000,umask=0137,dmask=067


if type mksquashfs 1>/dev/null 2>&1; then
    mksquashfs=mksquashfs
else
    echo "SquashFS Tools not found"
    exit 1
fi

mksqversion=`${mksquashfs} -version | head -1 | cut -d' ' -f3`
if [ "${mksqversion}" != ${mksqver} ]; then
    echo "Need SquashFS Tools v${mksqver}, but detected v${mksqversion}"
    exit 1
fi


sinfo "Copying USB /boot"
mkdir -p -m 755 ${USBROOT}
rsync -aHAXS -i --delete-excluded --exclude /boot/syslinux/version \
    ${LIVECD}/boot ${USBROOT}
sed -i "s/TAG //; s/ROOTFS/vfat/; s/FSFLAGS/${vfatflags}/" ${USBROOT}/boot/syslinux/syslinux.cfg


sinfo "Copying USB add-ons"
rsync -aHS -i -O --no-o --no-g --chmod=u=rwX,go=rX \
    --delete-excluded -C -f "P /boot/" \
    ${SRC}/dist/ ${USBROOT}
sed -i "s/SYSVER/${sysver}/" ${USBROOT}/setup.sh


# Using default block size of 128KiB
# Multi-threaded execution often causes deadlock after image creation
sinfo "Creating SquashFS image"

${mksquashfs} ${LIVECD} ${USBROOT}/boot/root-x86.sfs \
    -noappend -processors 1                          \
    -no-exports -no-progress -no-xattrs -comp lzma   \
    -sort ${SRC}/conf/rootfs.sort -e boot tmp/packages
chmod 644 ${USBROOT}/boot/root-x86.sfs


sinfo "Converting text files to DOS line endings"
find ${USBROOT} \( -name '*.txt' -o -name '*.bat' -o -name '*.cfg' \) \
    -exec sed -i 's/$/\r/' {} \;


sinfo "Building binary distribution ${distname}.zip"
(cd `dirname ${USBROOT}`; zip -FS -r9 -q ${distname}.zip `basename ${USBROOT}`)

zipfile=`dirname ${USBROOT}`/${distname}.zip
echo "Disk usage: `du -s --apparent-size -B 1M ${USBROOT} | cut -f1` MiB"
echo "ZIP size:   `du    --apparent-size -B 1M ${zipfile} | cut -f1` MiB"


sinfo "Done."
