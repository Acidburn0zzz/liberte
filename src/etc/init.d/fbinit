#!/sbin/runscript

description="Initializes VESA framebuffer."


depend() {
    after modules

    # framebuffer initialization resets extended ASCII mapping
    before consolefont
    before xconfig
}


start() {
    # Load VMware / VESA framebuffer if framebuffer is not active
    # and if video=... was specified on kernel command line
    if [ ! -e /dev/fb0 ]; then
        for param in `cat /proc/cmdline`; do
            # Support only video= parameters without driver:/output: qualification
            # /usr/src/linux/Documentation/fb/modedb.txt
            if [ "${param}" != "${param#video=}" -a "${param}" = "${param#*:}" ]; then
                # Use our vmmouse_detect wrapper to detect VMware
                # (VMware card is not enough, e.g., QEMU: "Hardware has no pitchlock")
                if vmmouse_detect; then
                    einfo "Initializing VMware framebuffer"
                    modprobe vmwgfx enable_fbdev=1
                    eend $?
                else
                    vesa_mode="${param#video=}"
                    einfo "Initializing VESA framebuffer: ${vesa_mode}"
                    modprobe uvesafb mode_option="${vesa_mode}" mtrr=3 scroll=ywrap
                    eend $?
                fi
            fi
        done
    fi
}
