## Default user the server will run as
User tor

PIDFile              /var/run/tor/tor.pid
Log notice syslog
#Log notice file     /var/log/tor/tor.log

## "SocksPort 0" for server-only setup
SocksListenAddress   127.0.0.1
SocksPort            9050

## control_auth_cookie in data directory
ControlListenAddress 127.0.0.1
ControlPort          9051
CookieAuthentication 1

## The directory for keeping all the keys/etc.
DataDirectory        /var/lib/tor/data

## Hidden service on local port 80 -> 9080
HiddenServiceDir     /var/lib/tor/hidden_service/
HiddenServicePort    80 127.0.0.1:9080

## Easy operation behind firewalls, also disguise
## connections somewhat.
ReachableAddresses   *:80, *:443

## Do not reject resolved DNS connections
## (otherwise proxychains fails)
SafeSocks            0

# Do not relay. From Tor FAQ:
#   Three different research papers describe ways to identify the relays in a
#   circuit by running traffic through candidate relays and looking for dips
#   in the traffic while the circuit is active. These clogging attacks are not
#   that scary in the Tor context so long as relays are never clients too. But
#   if we're trying to encourage more clients to turn on relay functionality
#   too (whether as bridge relays or as normal relays), then we need to
#   understand this threat better and learn how to mitigate it.
ClientOnly           1

## Bridges may be added below by /etc/init.d/identity
UseBridges           0
