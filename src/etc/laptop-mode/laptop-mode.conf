# CONTROL_something=0/1      whether Laptop Mode Tools controls something
# LM/NOLM_something=value    value for something when LM is active/non-active
# AC/BATT_something=value    value for something when on AC/battery power
#
# The available prefixes are different for each setting: see laptop-mode.conf(8).
# Some options only work on ACPI systems. They are marked ACPI-ONLY.
#
# This configuration file is a fragment of shell script.
# can use all the features of the shell scripting language to achieve your
# desired configuration.
#
# Settings priority:
#   - /etc/laptop-mode/laptop-mode.conf    (highest)
#   - /etc/laptop-mode/conf.d/*.conf
#   - /usr/sbin/laptop_mode                (lowest)
# The configuration settings here override those in /etc/laptop-mode/conf.d.

# Logging, shell debug mode
VERBOSE_OUTPUT=0
LOG_TO_SYSLOG=1
DEBUG=0

# When to enable laptop mode (lid - ACPI-only)
ENABLE_LAPTOP_MODE_ON_BATTERY=1
ENABLE_LAPTOP_MODE_ON_AC=1
ENABLE_LAPTOP_MODE_WHEN_LID_CLOSED=1

# Enable all simple zero-configuration auto modules
# grep -l '^CONTROL_.*=.*auto' /etc/laptop-mode/conf.d/* | sed 's:.*/::; s:\.conf$::'
ENABLE_AUTO_MODULES=1

# When data loss sensitive features are disabled, laptop mode tools acts as if
# laptop mode were disabled, for those features only (ACPI-only).
#   - laptop_mode (i.e., delayed writes)
#   - hard drive write cache
# Set to 0 in order to prevent laptop mode tools from using the options.
MINIMUM_BATTERY_CHARGE_PERCENT=3
DISABLE_LAPTOP_MODE_ON_CRITICAL_BATTERY_LEVEL=1

# For spinning down your hard drives, laptop mode will remount file systems and
# adjust hard drive spindown timeouts.
HD="/dev/[hs]d[a-z]"
if [ `echo ${HD}` = "${HD}" ]; then
    HD=
fi

# Use hdparm for /dev/sd*, not sdparm
ASSUME_SCSI_IS_SATA=1

# The maximum time to keep unsaved data waiting in memory
LM_BATT_MAX_LOST_WORK_SECONDS=120
LM_AC_MAX_LOST_WORK_SECONDS=120

# Change mount options on partitions in PARTITIONS?
# Includes readahead, which is applied to *all* files.
# (don't trust mount options to a set of terribly written scripts)
CONTROL_MOUNT_OPTIONS=0
PARTITIONS="auto"
CONTROL_NOATIME=0
USE_RELATIME=1
CONTROL_READAHEAD=1
LM_READAHEAD=1024
NOLM_READAHEAD=128

# Standby timeout (converted to hdparm -S / sdparm -s SCT)
CONTROL_HD_IDLE_TIMEOUT=1
LM_AC_HD_IDLE_TIMEOUT_SECONDS=300
LM_BATT_HD_IDLE_TIMEOUT_SECONDS=120
NOLM_HD_IDLE_TIMEOUT_SECONDS=7200

# HD power management (hdparm -B: aggressive=1..127, normal=128..254, disable=255)
# ("auto" refers to ENABLE_AUTO_MODULES)
CONTROL_HD_POWERMGMT="auto"
BATT_HD_POWERMGMT=1
LM_AC_HD_POWERMGMT=254
NOLM_AC_HD_POWERMGMT=254

# HD write cache management (hdparm -W)
CONTROL_HD_WRITECACHE=0
NOLM_AC_HD_WRITECACHE=1
NOLM_BATT_HD_WRITECACHE=0
LM_HD_WRITECACHE=0


# Module-specific overrides

# Ethernet throttling
ETHERNET_DEVICES=""
for eth_dev in /sys/class/net/*; do
    # (use deprecated WIRELESS_EXT_SYSFS in kernel, if available)
    if [ -e "${eth_dev}/device"  -a  ! -e "${eth_dev}/wireless" ]; then
        eth_dev=`basename ${eth_dev}`
        if ifconfig ${eth_dev} | grep -q 'Link encap:Ethernet' ; then
            ETHERNET_DEVICES="${ETHERNET_DEVICES} ${eth_dev}"
        fi
    fi
done
unset eth_dev

# CPU governors: "ondemand" requires very low latency freq transitions
BATT_CPU_GOVERNOR=conservative
LM_AC_CPU_GOVERNOR=conservative
NOLM_AC_CPU_GOVERNOR=conservative

# DPMS is handled in user's xsession / xinitrc
CONTROL_DPMS_STANDBY=0

# HAL is deprecated
CONTROL_HAL_POLLING=0

# Handle Intel HDA power saving when on AC, too
LM_AC_INTEL_HDA_POWERSAVE=1
INTEL_HDA_DEVICE_TIMEOUT=2

# Handle Intel AHCI-comliant SATA chipsets when on AC, too
LM_AC_ACTIVATE_SATA_POWER=1

# Terminal blanking
BATT_TERMINAL_BLANK_MINUTES=1
BATT_TERMINAL_POWERDOWN_MINUTES=2
LM_AC_TERMINAL_BLANK_MINUTES=5
LM_AC_TERMINAL_POWERDOWN_MINUTES=5
NOLM_AC_TERMINAL_BLANK_MINUTES=5
NOLM_AC_TERMINAL_POWERDOWN_MINUTES=5

# Handle wireless when on AC, too
WIRELESS_AC_POWER_SAVING=1
IPW2100_AC_POWER=${IPW2100_BATT_POWER}
IWL_AC_POWER=${IWL_BATT_POWER}
