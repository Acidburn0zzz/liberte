#********************************************************************
# Wrapper Properties
#
# WARNING - for any changes to take effect, you must completely
# stop the router and the wrapper. Clicking 'Restart' on your
# router console will NOT reread this file! You must
# click "Shutdown", wait 11 minutes, then start i2p.
#********************************************************************

# Java Application
wrapper.java.command=java
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Java Classpath (include wrapper.jar)
wrapper.java.classpath.1=/opt/i2p/lib/*.jar
# wrapper.java.classpath.2=%CLASSPATH%

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
# wrapper.java.library.path.1=/opt/i2p/lib

# Java Additional Parameters
# Numbers must be consecutive (except for stripquotes)
wrapper.java.additional.1=-DloggerFilenameOverride=logs/log-router-@.txt
wrapper.java.additional.2=-Dorg.mortbay.http.Version.paranoid=true
wrapper.java.additional.3=-Dorg.mortbay.xml.XmlParser.NotValidating=true
wrapper.java.additional.4=-Di2p.dir.base="/opt/i2p"
wrapper.java.additional.4.stripquotes=TRUE

# On some IPv6 enabled systems, I2P and other network-enabled java applications
# may fail to start. For examples see
# http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=560044. 
# Two things that may help if you experience this issue
# 1) "echo 0 > /proc/sys/net/ipv6/bindv6only" as root; or
# 2) uncomment the next two lines:
# wrapper.java.additional.5=-Djava.net.preferIPv4Stack=true
# wrapper.java.additional.6=-Djava.net.preferIPv6Addresses=false

# Java Heap Size (in MB)
wrapper.java.initmemory=4
wrapper.java.maxmemory=64

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=net.i2p.router.Router

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
# If changed, add the following line above to
# tell the router where to find the wrapper log
# wrapper.java.additional.X=-Dwrapper.logfile=/path/to/wrapper.log
wrapper.logfile=/var/lib/i2p/wrapper.log

# Format of output for the log file.
# The format consists of the tokens 'L' for log level, 'P' for prefix, 'D' for thread,
# 'T' for time, 'Z' for millisecond time, and 'M' for message
# Unfortunately the log timezone cannot be changed, see
# http://www.nabble.com/Log-message-timezone-td23651317.html
wrapper.logfile.format=TM

# Log Level for log file and sys/event log output.
wrapper.logfile.loglevel=INFO
wrapper.syslog.loglevel=NONE

# Maximum size that the log file will be allowed to grow to before
# the log is rolled (k/m suffix, 0 to disable rolling).
wrapper.logfile.maxsize=16k

# Maximum number of rolled log files (0 for no limit).
wrapper.logfile.maxfiles=1

# choose what to do if the JVM kills itself based on the exit code
wrapper.on_exit.default=SHUTDOWN
wrapper.on_exit.0=SHUTDOWN
wrapper.on_exit.1=SHUTDOWN
# OOM
wrapper.on_exit.10=RESTART
# graceful shutdown
wrapper.on_exit.2=SHUTDOWN
# hard shutdown
wrapper.on_exit.3=SHUTDOWN
# hard restart
wrapper.on_exit.4=RESTART
# hard restart
wrapper.on_exit.5=RESTART

# the router may take a few seconds to save state, etc
wrapper.jvm_exit.timeout=30

# give the OS 15s to clear all the old sockets / etc before restarting
wrapper.restart.delay=15

# The ping timeout must be at least 5 seconds longer than the value of wrapper.ping.interval.
# Extend this if you are getting 'JVM appears hung' shutdowns.
wrapper.ping.interval=300
wrapper.ping.timeout=320

# don't use the wrapper's internal timer thread
# (force a restart of the router whenever OS clock changes)
wrapper.use_system_time=true

# pid file for the JVM and wrapper (only when daemonizing)
wrapper.java.pidfile=/var/lib/i2p/routerjvm.pid
wrapper.pidfile=/var/lib/i2p/i2p.pid
