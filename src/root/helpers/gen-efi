#!/bin/sh -e

# rEFIt searches for /EFI/*/*.EFI, so care must be taken
# to preserve uppercase for case-sensitive filesystems

# i386-efi:   most pre-2008 Macs (EFI 1.x + UGA)
# x86_64-efi: later Macs (EFI 1.x + GOP), all non-Macs (UEFI 2.x + GOP)

# Paths mandated for removable media devices by
# UEFI Spec 2.3.1 Err. A, Sec. 12.3.1.3 and 3.4.1.1
efidir=/EFI/BOOT
ia32name=BOOTIA32.EFI
x64name=BOOTx64.EFI

grubroot=/boot/grub
grubcfg=${grubroot}/grub.cfg
templcfg=${HOME}/config/grub.cfg
templearlycfg=${HOME}/config/grub-early.cfg

consolefont=euro.pf2


# Included modules (command.lst, partmap.lst, fs.lst, video.lst)
modules_core="normal configfile echo test true minicmd ls search gzio"
modules_fs="part_msdos part_gpt iso9660 fat ext2 hfsplus loopback"
modules_boot="boot linux halt reboot chain appleldr"
modules_arch="cpuid loadbios efi_gop efi_uga fixvideo"
modules="${modules_core} ${modules_fs} ${modules_boot} ${modules_arch}"


# Building a memdisk (see grub2-mkstandalone in grub-2.00)
memdisk() {
    local out="$1" arch="$2" tag="$3" mods="$4"
    local build=`mktemp -d`
    local libdir=/usr/lib/grub moddir=${build}/grub/${arch}
    [ -e ${libdir}  ] || libdir=/lib/grub2 moddir=${build}/grub
    [ -n "${build}" ] || return 1

    # Iteratively include all dependent modules
    local oldmods= deps= modname=
    while [ "${mods}" != "${oldmods}" ]; do
        oldmods="${mods}"
        for modname in ${mods}; do
            deps=`sed -n "s/^${modname}://p" ${libdir}/${arch}/moddep.lst`
            mods="${mods}${deps}"
        done

        mods=`echo ${mods} | tr ' ' '\n' | sort -u`
    done

    # Filter filesystems list, so that "search" doesn't try to load modules
    # Filter command from minicmd overrides
    mkdir -p ${moddir}
    cp -p ${libdir}/${arch}/*.lst ${moddir}
    sed -ri "/^(`echo $mods | sed 's/ /|/g'`)\$/b; d" ${moddir}/fs.lst
    sed -ri '/^\*(cat|help):/d'                       ${moddir}/command.lst

    # NOTE: localization files go into /grub/locale/*.mo
    mods=`echo "${mods}" | sed "s:.*:${libdir}/${arch}/&.mod:"`
    cp -p ${mods} ${moddir}

    sed "s@PREFIX@/liberte@; s/\(efi_arch=\).*/\1${tag}/" ${templearlycfg} \
        > ${build}/grub/grub.cfg

    tar -cf ${build}/memdisk.tar -C ${build} grub

    # NOTE: -p must come after -m
    grub2-mkimage -C xz -O ${arch} -m ${build}/memdisk.tar -p "(memdisk)/grub" \
                  -o ${out} memdisk tar
    rm -r ${build}
}


# Generate EFI binaries with modules in memdisk
mkdir -p /boot${efidir}

memdisk /boot${efidir}/${ia32name} i386-efi   IA32 "${modules}"
memdisk /boot${efidir}/${x64name}  x86_64-efi x64  "${modules}"


# Copy gfxterm font
mkdir -p ${grubroot}
cp -p /usr/share/grub*/${consolefont} ${grubroot}


# Substitute and copy template
cat ${templcfg}                           \
    | sed "/^##/d ;
           s@PREFIX@/liberte@ ;
           s@VERSION@${LVERSION}@ ;       \
           s@CONSOLEFONT@${consolefont}@" \
    > ${grubcfg}
