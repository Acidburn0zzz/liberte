#!/bin/sh -e

# UEFI Spec 2.3.1 Err. A, Sec. 27.6.1:
#
# If the signature is an X.509 certificate then verification of the
# signature of an image should validate the public key certificate in the
# image using certificate path verification, up to this X.509 certificate as
# a trusted root.

sbdir=/usr/local/addons/secureboot
sbdirtmp=${sbdir}.tmp

sslconf=${HOME}/config/secureboot.cnf
export RANDFILE=${sbdirtmp}/openssl.rnd

sb_ca=${sbdirtmp}/Liberte-SecureBoot-CA
sb_sign=${sbdirtmp}/Liberte-SecureBoot-Cert-1
sb_srl=${sbdirtmp}/Liberte-SecureBoot.srl

sb_ca_dn="/C=SU/O=Liberte Linux/CN=Secure Boot CA/emailAddress=liberte@dee.su"
sb_sign_dn="/C=SU/O=Liberte Linux/CN=Secure Boot Cert 1/emailAddress=liberte@dee.su"

keybits=4096
keycipher=-aes-256-cbc
crtdgst=-sha256
crtdays=18300


if [ "$1" = test ]; then
    sb_ca_dn="${sb_ca_dn%/email*} (TEST ONLY)/emailAddress=test@example.com"
    sb_sign_dn="${sb_sign_dn%/email*} (TEST ONLY)/emailAddress=test@example.com"
    keycipher=
fi


if [ ! -e ${sbdir} ]; then
    rm -rf ${sbdirtmp}
    mkdir  ${sbdirtmp}

    openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:${keybits} ${keycipher} \
                    -out ${sb_ca}.key
    openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:${keybits} ${keycipher} \
                    -out ${sb_sign}.key

    openssl req   -batch -new -utf8 -subj "${sb_ca_dn}" \
                  -key ${sb_ca}.key                     \
            -x509 -days ${crtdays} ${crtdgst}           \
                  -config ${sslconf} -extensions sb_ca  \
                  -out ${sb_ca}.crt

    openssl req -batch -new -utf8 -subj "${sb_sign_dn}"        \
                -key ${sb_sign}.key                            \
        | openssl x509 -req -days ${crtdays} ${crtdgst}        \
                       -CA ${sb_ca}.crt -CAkey ${sb_ca}.key    \
                       -CAcreateserial -CAserial ${sb_srl}     \
                       -extfile ${sslconf} -extensions sb_sign \
                       -out ${sb_sign}.crt

    openssl verify -x509_strict -check_ss_sig -policy_check \
                   -CApath /dev/null -CAfile ${sb_ca}.crt   \
                   ${sb_ca}.crt ${sb_sign}.crt

    openssl x509 -in ${sb_ca}.crt   -outform DER -out ${sb_ca}.der
    openssl x509 -in ${sb_sign}.crt -outform DER -out ${sb_sign}.der

    chmod go= ${sb_ca}.key ${sb_sign}.key

    rm -f ${RANDFILE}
    mv -T ${sbdirtmp} ${sbdir}
fi
