#!/bin/bash -e

helpdir=${HOME}/helpers
noroot="sudo -n -u nobody"

hsversion=`cat ${HOME}/config/kversion`
kversion=${hsversion/-/-hardened-}
[ ${kversion} != ${hsversion} ] || kversion=${hsversion}-hardened
xzmem=20

protected="/etc/._cfg????_locale.gen"

kpatches=${HOME}/patches/kernel-patches.sha256

i2phostsurl=https://www.i2p2.de/hosts.txt
i2phosts=/opt/i2p/hosts.txt
netdbdir=/tmp/netDb
netdbdst=/var/lib/i2p/router/netDb


sinfo() {
    echo -e "\033[1;33;41m$@\033[0m"
}

spatch() {
    local pname=$1; shift
    local pcat=cat
    local revok=

    if [ "${pname##*.}" = gz ]; then
        pcat=zcat
    fi

    revres=0
    ${pcat} ${pname} | patch --dry-run -R -Ns -r /tmp/patch-rejects "$@" 1>/dev/null || revres=$?

    if ${pcat} ${pname} | patch -Ns -r /tmp/patch-rejects "$@" 1>/dev/null; then
        echo "Successfully applied patch: ${pname}"
    else
        if [ ${revres} != 0 ]; then
            echo "Failed to apply patch: ${pname}"
            return 1
        else
            echo "Patch already applied: ${pname}"
        fi
    fi
    rm -f /tmp/patch-rejects
}

patch_ebuild() {
    spatch "$1" -p0
    ebuild `awk '{print $2; exit}' "$1"` manifest
}

rebuild_locales() {
    grep UTF-8 /usr/share/i18n/SUPPORTED > /etc/locale.gen.new
    if cmp -s /etc/locale.gen{.new,}; then
        rm /etc/locale.gen.new
    else
        sinfo "Rebuilding locales"
        mv /etc/locale.gen{.new,}
        locale-gen -q
    fi
}


# Sanity check
if [ ${PHASE} != src ]; then
    echo "This is phase [${PHASE}], run $0 in phase [src]."
    exit 1
fi


sinfo "Setting a hardened profile"
eselect profile set hardened/linux/x86

echo ">sys-kernel/hardened-sources-${hsversion}" > /etc/portage/package.mask/kernel
rm -f /etc/portage/savedconfig/*/*-[0-9]*


if [ -x /usr/bin/gpg  -a  -x /usr/bin/eix ]; then
    sinfo "Updating portage"

    gpg -q --homedir /etc/portage/gnupg --import /usr/local/addons/keys/gentoo-*.asc
    eix-sync -qw -C -q
fi


sinfo "Applying temporary portage patches"
# (#417043)
patch_ebuild ${HOME}/patches/portage/fbreader.patch
# (#424816)
patch_ebuild ${HOME}/patches/portage/virtualbox-guest-additions.patch
patch_ebuild ${HOME}/patches/portage/xf86-video-virtualbox.patch
# (restore removed unstable ebuild)
khs=/usr/portage/sys-kernel/hardened-sources/hardened-sources-3.4.5.ebuild
cp -a ${khs} ${khs/3.4.5/3.4.7}
sed -i 's/="6"/="8"/' ${khs/3.4.5/3.4.7}
ebuild ${khs/3.4.5/3.4.7} manifest


if [ "$1" = fresh  -o  ! -e /usr/src/linux-${kversion}/incremental ]; then
    # Kernel sources should be present when sys-fs/udev is compiled
    # Maintainer note: after non-fresh kernel update+compile, do
    # emerge -q1 dev-libs/klibc sys-apps/v86d
    #            app-emulation/{open-vm-tools-kmod,virtualbox-guest-additions}
    sinfo "Downloading kernel ${kversion}"
    rm -rf /usr/src/linux-${kversion} /lib/modules
    emerge -q1 =sys-kernel/hardened-sources-${hsversion}


    sinfo "Preparing kernel build environments"
    rm -rf /usr/src/linux-{main,kexec{,-64}}
    mkdir  /usr/src/linux-{main,kexec{,-64}}

    cp ${HOME}/config/linux-${kversion%-r*}.config          /usr/src/linux-main/.config
    cp ${HOME}/config/linux-${kversion%-r*}-kexec.config    /usr/src/linux-kexec/.config
    cp ${HOME}/config/linux-${kversion%-r*}-kexec-64.config /usr/src/linux-kexec-64/.config

    chown -hR bin:bin /usr/src/linux-{main,kexec{,-64}}


    sinfo "Downloading kernel patches"
    for url in `sed -n 's/^# URL //p' ${kpatches}`; do
        urldest=`sed -n "\@^# URL ${url}@{n; s/.*  //p}" ${kpatches}`
        mkdir -p "${urldest%/*}"
        su - -s /bin/sh nobody -c "wget -q -O - \"${url}\"" > "${urldest}"
        sed -i '/^diff --git /,/^-- /{/^-- /d; b}; d' "${urldest}"
    done
    sha256sum --quiet -c ${HOME}/patches/kernel-patches.sha256


    sinfo "Applying kernel patches"
    spatch /usr/local/portage/distfiles/overlayfs.v13-3.4-rc7.patch -d /usr/src/linux-${kversion} -p1
    spatch ${HOME}/patches/pax-linux-3.4.7-test27-29-diff.patch     -d /usr/src/linux-${kversion} -p1


    # Filter locales before remerging libc
    sinfo "Filtering locales"
    grep UTF-8 /usr/share/i18n/SUPPORTED > /etc/locale.gen


    # Some news are delayed until first emerge
    eselect news read all
    eselect news purge


    sinfo "Recompiling toolchain"
    oldgcc=`find /var/db/pkg/sys-devel -maxdepth 1 -type d -name 'gcc-[0-9]*'`
    emerge -q1 sys-devel/binutils
    emerge -q1 sys-devel/gcc

    # consider removing old gcc only if it still exists after emerge
    # (emerge was in a new slot, or same version)
    if [ -e "${oldgcc}" ]; then
        chost=`portageq envvar CHOST`
        oldgccprof=`gcc-config -c`
        newgccprof=`find /etc/env.d/gcc -type f -name "${chost}-*"           \
            ! -name "${oldgccprof}" ! -name "${oldgccprof}-*" -printf '%f\n' \
            | sort | head -n 1`

        # unmerge only if the "new" gcc has a different version
        if [ -n "${newgccprof}" ]; then
            gcc-config "${newgccprof}"
            emerge -qC --deselect=n =sys-devel/`basename ${oldgcc}`
        fi
    fi
    env-update
    source /etc/profile

    # necessary after gcc upgrades
    emerge -q1 sys-devel/libtool

    emerge -q1 sys-libs/glibc
    rm -f ${protected}


    # Rely on timezone-data ebuild updating /etc/localtime
    sinfo "Compiling system"
    USE="-X -consolekit" emerge -qepv @system
    USE="-X -consolekit" emerge -qe   @system
    rm -f ${protected}
    rebuild_locales


    sinfo "Removing non-system packages"
    mv /var/lib/portage/world{,.off}
    echo sys-kernel/hardened-sources > /var/lib/portage/world
    emerge -qc
    mv /var/lib/portage/world{.off,}


    sinfo "Checking for non-rebuilt packages"
    orphans=`find /var/db/pkg -mindepth 3 -maxdepth 3 -name BUILD_TIME           \
        ! -path  /var/db/pkg/sys-kernel/hardened-sources-${hsversion}/BUILD_TIME \
        ! -newer /var/db/pkg/sys-kernel/hardened-sources-${hsversion}/BUILD_TIME \
        -printf '%h\n' | sed s:/var/db/pkg/:: | sort`
    if [ -n "${orphans}" ]; then
        sinfo "The following packages were not rebuilt"
        echo "${orphans}"
        exit 1
    fi


    sinfo "Preparing kernel"
    ${helpdir}/gen-kernel prepare


    sinfo "Marking tree as ready for incremental builds"
    touch /usr/src/linux-${kversion}/incremental


    # Shouldn't contain any rebuilds
    sinfo "Listing updates"
    emerge -qupvDN --with-bdeps y @world

else
    sinfo "Skipping full rebuild (use \"fresh\")"
    sinfo "Listing updates"

    updlist=`mktemp`
    emerge -qupvDN --with-bdeps y --color y @world | tee ${updlist}

    if [ -s ${updlist} ]; then
        echo -n "Press Enter to continue..."
        read
    fi

    rm ${updlist}
fi


sinfo "Compiling world"
emerge -quDN --with-bdeps y @world


# Some news are delayed until first emerge
eselect news read all
eselect news purge


sinfo "Removing unnecessary packages"
emerge -qc --deselect=n


sinfo "Performing package move updates"
emaint -c world
emaint -f moveinst
emaint -f movebin


sinfo "Updating Perl modules"
perl-cleaner --ph-clean --modules -- -q


# sinfo "Updating Python modules"
# python-updater -dmanual -- -q


sinfo "Checking linking consistency"
revdep-rebuild -qi

rm -f ${protected}
etc-update
rebuild_locales


sinfo "Listing GLSAs"
glsa-check -lq


if [ ! -e /var/cache/eix ]; then
    sinfo "Creating eix database"
    eix-update -q
fi


sinfo "Compiling custom executables"
mkdir -p /usr/lib/xchat/plugins

cflags="-std=c99 -Wall -pedantic `portageq envvar CFLAGS` `portageq envvar LDFLAGS`"
gcc  ${cflags} -o /usr/local/sbin/udev-watchdog      /usr/local/src/udev-watchdog.c -ludev
gcc  ${cflags} -o /usr/local/sbin/slay               /usr/local/src/slay.c
gcc  ${cflags} -o /usr/local/sbin/privsh             /usr/local/src/privsh.c
gcc  ${cflags} -o /usr/local/bin/log-limit           /usr/local/src/log-limit.c
gcc  ${cflags} -o /usr/lib/xchat/plugins/cap_sasl.so /usr/local/src/cap_sasl.c -shared -fPIC \
     -D _GNU_SOURCE -I /usr/include/glib-2.0 -I /usr/lib/glib-2.0/include -Wl,--export-dynamic

cflags="-Wall `portageq envvar CFLAGS`"
mkdir -p /usr/local/addons/initrd
klcc ${cflags} -o /usr/local/addons/initrd/init-kexec /usr/local/src/init-kexec.c

strip -s /usr/local/{sbin/{udev-watchdog,slay,privsh},bin/log-limit} \
         /usr/local/addons/initrd/init-kexec /usr/lib/xchat/plugins/cap_sasl.so


sinfo "Generating localization, timezone and keyboard layout menus"
${helpdir}/gen-locale-menu


# No sub-pixel rendering, since LCD / cable type is unknown
sinfo "Configuring fontconfig"
for fconf in \
    10-no-sub-pixel.conf \
    20-unhint-small-dejavu-sans.conf \
    20-unhint-small-dejavu-sans-mono.conf \
    20-unhint-small-dejavu-serif.conf \
    44-wqy-zenhei.conf \
    57-dejavu-sans.conf \
    57-dejavu-sans-mono.conf \
    57-dejavu-serif.conf \
    65-khmer.conf \
    64-ttf-thai-tlwg.conf \
    70-no-bitmaps.conf
do
    if [ ! -f /etc/fonts/conf.d/${fconf} ]; then
        eselect fontconfig enable ${fconf}
    fi
done

# Ghostscript has its urw-fonts dependency stripped
if [ -e /usr/share/fonts/default ]; then
    rm    /usr/share/fonts/default/ghostscript
    rmdir /usr/share/fonts/default
fi


# http://www.x.org/wiki/GalliumStatus
sinfo "Configuring Mesa, OpenGL and XvMC"
eselect mesa   set --auto
eselect mesa   set i915 classic
eselect mesa   set sw   classic

eselect opengl set xorg-x11
eselect xvmc   set xorg-x11


sinfo "Updating SMART and I2P hosts databases"

update-smart-drivedb || echo "update-smart-drivedb failed (ignoring)"

# zzz @ #i2p-dev: hosts.txt in the source tree is the same or newer
if ${noroot} curl -k -sSfg --compressed ${i2phostsurl} > ${i2phosts}.new; then
    mv ${i2phosts}{.new,}
else
    echo "I2P hosts.txt update failed (ignoring)"
    rm -f ${i2phosts}.new
fi


sinfo "Verifying SMART and I2P hosts databases"
${noroot} ${helpdir}/vfy-databases


# Skip update of a recent netDb
sinfo "Creating initial netDb for I2P"

if [ "`find ${netdbdst} -maxdepth 0 -mtime -1 2>/dev/null`" = ${netdbdst} ]; then
    echo "I2P netDb was updated less than 24h ago, skipping"
elif ! ${noroot} ${helpdir}/gen-netdb; then
    if [ -e ${netdbdst} ]; then
        echo "I2P netDb update failed (ignoring)"
    else
        echo "Could not retrieve I2P netDb list"
        exit 1
    fi
else
    chown -R i2p:i2p ${netdbdir}
    chmod -R go=     ${netdbdir}
    rm -rf         ${netdbdst}
    mv ${netdbdir} ${netdbdst}
fi


sinfo "Verifying HTP servers"
${noroot} ${helpdir}/vfy-htp-servers


# /usr/local/share/ca-certificates is implicitly trusted
sinfo "Refreshing trusted certificates list"
find -L /etc/ssl/certs -maxdepth 1 -type l -delete
update-ca-certificates -f


sinfo "Generating /etc/issue"
sed "s@VERSION@${LVERSION}@" ${HOME}/config/issue > /etc/issue


sinfo "Patching init scripts"
initpatches="inittab system-auth autofs iptables htpdate"
for p in ${initpatches}; do
    spatch ${HOME}/patches/${p}.patch -p0
done
sed -i 's/^# include /include /' /etc/nanorc


sinfo "Configuring start-up services"
svcsysinit="udev"
svcboot="consolefont irqbalance haveged metalog
         iptables consolekit lockdown fbinit"
svcdefault="liberte identity cabled persist xconfig vmconfig spindown tordate
            acpid smartd laptop_mode gpm
            nscd autofs NetworkManager privoxy
            udev-postmount"
svcshutdown="memwipe"
delsvcboot="urandom swap bootmisc root mtab"
delsvcdefault="netmount local"
delsvcshutdown="savecache"

for runlevel in sysinit boot default shutdown; do
    eval svcs=\${svc${runlevel}}
    for svc in ${svcs}; do
        [   -e /etc/runlevels/${runlevel}/${svc} ] || rc-update add ${svc} ${runlevel}
    done
done

for runlevel in boot default shutdown; do
    eval svcs=\${delsvc${runlevel}}
    for svc in ${svcs}; do
        [ ! -e /etc/runlevels/${runlevel}/${svc} ] || rc-update del ${svc} ${runlevel}
    done
done

rc-update -u


# (lastlog is not sparse on overlayfs, wtmp has no growth limit)
sinfo "Disabling non-rotating logs"
ln -sf /dev/null /var/log/ConsoleKit/history
ln -sf /dev/null /var/log/lastlog
rm -f  /var/log/wtmp


# "wheel"     group: necessary for su/sudo PAM authentication + GRSEC TPE (= 10)
#                    + stop/restart PolicyKit permissions + lid events
# "plugdev"   group: ModemManager control PolicyKit permissions;
#                    + NetworkManager modify system connections
#                    + wireless/bluetooth rfkill switch
# "lp"        group: D-Bus communication with bluetoothd
# ["uucp"]    group: access to RFCOMM devices (e.g., obexftp)
# "games"     group: prevent games complaining about not keeping scores
# "vmware"    group: VMware's drag-n-drop feature for file exchange (when enabled)
# "vboxguest" group: VirtualBox seamless mode, auto-resize and clipboard
sinfo "Setting up users"
sed -i 's/^#\?\(ENCRYPT_METHOD\) .*/\1 SHA256/' /etc/login.defs

pwconv
pwck -qr

grpck -r
grpconv

echo root:liberte | chpasswd
usermod -L root

groupadd -f -r games
groupadd -f -r plugdev
groupadd -g 9000 legion || [ $? = 9 ]
groupadd -g 9001 nofw   || [ $? = 9 ]

useradd -u 2101 -g legion -c "Anonymous"            -d /home/anon                  anon  || [ $? = 9 ]
useradd -u 2102 -g nofw   -c "Non-firewalled"       -d /home/nofw -s /sbin/nologin nofw  || [ $? = 9 ]

usermod -G wheel,plugdev,lp,games,vmware,vboxguest anon
usermod -G legion                                  cable

useradd -c nscd    -d /dev/null -s /sbin/nologin -r nscd || [ $? = 9 ]
useradd -c htpdate -d /dev/null -s /sbin/nologin -r htp  || [ $? = 9 ]
useradd -c slay    -d /dev/null -s /sbin/nologin -r slay || [ $? = 9 ]

for uid in i2p; do
    touch               /tmp/${uid}-ref
    chown ${uid}:${uid} /tmp/${uid}-ref
done


sinfo "Initializing a secondary PGP keyring"
sudo -n -u anon gpg -q --homedir /home/anon/persist/security/pgp --no-default-keyring \
    --keyring liberte.gpg --import /usr/local/addons/keys/liberte-*.asc
install -p -o anon -g legion -m 600 -t /home/anon/persist/security/pgp \
    /usr/local/addons/keys/mfpl.crt

# clear pam_mktemp's append-only attribute to allow later livecd directory removal
chattr -f -a /tmp/.private || :


sinfo "Creating dconf databases"
find /etc/dconf/db -maxdepth 1 -type f -delete
dconf update


sinfo "Installing wrappers"
ln -sf ../local/libexec/proxyresolv.wrapper /usr/bin/proxyresolv


sinfo "Building kernel modules"
${helpdir}/gen-kernel modules


sinfo "Creating initramfs image"
${helpdir}/gen-initramfs


sinfo "Building main and KEXEC kernels"
${helpdir}/gen-kernel


sinfo "Verifying XZ decompression memory requirements"
kernxz=arch/x86/boot/compressed/vmlinux.bin.xz

head -c -4 /usr/src/linux-main/${kernxz}     | xz -t -M $((2 * ${xzmem}))MiB
head -c -4 /usr/src/linux-kexec/${kernxz}    | xz -t -M $((2 * ${xzmem}))MiB
head -c -4 /usr/src/linux-kexec-64/${kernxz} | xz -t -M $((2 * ${xzmem}))MiB

xz -t -M ${xzmem}MiB /usr/src/linux-{main,kexec{,-64}}/usr/initramfs_data.cpio.xz


sinfo "Kernel config differences:"
diff ${HOME}/config/linux-${kversion%-r*}.config          /usr/src/linux-main/.config     || :


sinfo "Kexec kernel config differences:"
diff ${HOME}/config/linux-${kversion%-r*}-kexec.config    /usr/src/linux-kexec/.config    || :
diff ${HOME}/config/linux-${kversion%-r*}-kexec-64.config /usr/src/linux-kexec-64/.config || :


if [ -e /etc/portage/savedconfig/sys-apps/busybox-* ]; then
    sinfo "BusyBox config differences:"
    diff /etc/portage/savedconfig/sys-apps/busybox{,-*} || :
fi


sinfo "Unknown missing firmwares:"
${helpdir}/lst-firmwares


sinfo "Generating SYSLINUX configuration"
${helpdir}/gen-syslinux


sinfo "Generating EFI GRUB configuration"
${helpdir}/gen-efi


sinfo "Generating Secure Boot test certificates"
${helpdir}/gen-sb-cert test


sinfo "Done."
