#!/bin/bash -e

sinfo() {
    echo -e "\033[1;33;41m$@\033[0m"
}


# Sanity check
if [ ${PHASE} != copy ]; then
    echo "This is phase [${PHASE}], run $0 in phase [copy]."
    exit 1
fi


sinfo "Cleaning up portage configuration"
sed -i /TEMP/d /var/lib/portage/world /etc/portage/package.use


# equery requires gentoolkit, copy ebuilds early
# NOTE: the below patches are intended for depclean
# portage:        exclude python  RDEPEND
# gentoolkit:     exclude perl    RDEPEND
# lm_sensors:     exclude perl    RDEPEND
# xcb-proto:      exclude python  RDEPEND
# libglade:       exclude python  RDEPEND
# gtk+:           exclude python  RDEPEND
# gucharmap:      exclude python  RDEPEND
# pidgin:         exclude python  RDEPEND (dbus-python)
# gvfs:           exclude openssh RDEPEND
# splashutils:    exclude cpio    RDEPEND
# graphicsmagick: exclude perl    RDEPEND
# eboard:         exclude perl    RDEPEND
# mpg123:         exclude libtool RDEPEND
# libqalculate:   exclude gnuplot RDEPEND
# mesa:           replace libxml2[python] with libxml2 in RDEPEND
sinfo "Patching copies of selected ebuilds"
ebuilds="sys-apps/portage
         app-portage/gentoolkit
         sys-apps/lm_sensors
         x11-proto/xcb-proto
         gnome-base/libglade
         x11-libs/gtk+
         gnome-extra/gucharmap
         net-im/pidgin
         gnome-base/gvfs
         media-gfx/splashutils
         media-gfx/graphicsmagick
         games-board/eboard
         media-sound/mpg123
         dev-libs/opensc
         sci-libs/libqalculate
         media-libs/mesa"

# /usr/portage is bind-mounted ro
for ebuild in ${ebuilds}; do
    rsync -a /usr/portage/${ebuild} /usr/local/portage/`dirname ${ebuild}`
    eval ebuild_`basename ${ebuild//[-+]}`=`equery which ${ebuild}`
done

# Make portage think it doesn't need Python
# (allows depclean after python unmerge + shadow copy)
sed -i 's/\${python_dep}//' ${ebuild_portage}

# Perl is not needed at all (x2)
# Perl is only needed by sensors-detect and sensors-conf-convert
sed -i s:dev-lang/perl:: ${ebuild_gentoolkit} ${ebuild_eboard} ${ebuild_lm_sensors}

# Python is only (possibly) needed during libxcb build
# Python is only needed by libglade-convert
# Python is not needed at all by gtk+ and gucharmap
sed -i 's:^\(inherit\>.*\) python\>:\1:' ${ebuild_xcbproto} ${ebuild_libglade} \
                                         ${ebuild_gtk} ${ebuild_gucharmap}

# Python is needed by dbus-python, which is a non-separated dependency in ebuild
sed -i 's:\<dev-python/dbus-python\>::' ${ebuild_pidgin}

# Python support in libxml2 is only needed in development tools
sed -i 's:\(dev-libs/libxml2\)\[python\]:\1:' ${ebuild_mesa}

# OpenSSH is only needed for ssh:// support
sed -i s:net-misc/openssh:: ${ebuild_gvfs}

# cpio is only needed for splash_geninitramfs
sed -i s:app-arch/cpio:: ${ebuild_splashutils}

# perl-module.eclass: disable unnecessary dev-lang/perl[-build] dependency
sed -i 's/^inherit /GENTOO_DEPEND_ON_PERL="no"\n&/' ${ebuild_graphicsmagick}

# libltdl.* libraries are kept during libtool unmerge
sed -i s:sys-devel/libtool:: ${ebuild_mpg123} ${ebuild_opensc}

# Gnuplot is an overkill, and is superficially integrated
sed -i 's:>=sci-visualization/gnuplot-[a-z0-9._-]\+::' ${ebuild_libqalculate}

for ebuild in ${!ebuild_*}; do
    eval ebuild \$${ebuild} manifest
done


# Unmerge non-runtime dependencies (and cleanup the kernel directory)
sinfo "Unmerging build and temporary dependencies"
emerge -qc --with-bdeps n


# This recompiles packages with TEMP flags in package.use
sinfo "Recompiling build-dependent packages"
emerge -quDN world


sinfo "Copying gcc shared libs"
rsync -aHS `find /usr/lib/gcc -name '*.so' -o -name '*.so.*'` /usr/lib/
ldconfig


# Unmerge some packages that are listed in the system profile
# No package can be emerged afterwards
sinfo "Unmerging development packages"
mv /usr/lib/libltdl.* /tmp/

emerge -qC \
    sys-devel/make      \
    sys-devel/autoconf  \
    sys-devel/automake  \
    sys-devel/gnuconfig \
    sys-devel/m4        \
    sys-devel/patch     \
    \
    sys-devel/gcc       \
    sys-devel/binutils  \
    sys-devel/libtool   \
    sys-devel/flex      \
    sys-devel/bison     \
    \
    sys-kernel/linux-headers \
    sys-apps/busybox         \
    \
    sys-apps/man        \
    sys-apps/man-pages  \
    sys-apps/texinfo    \
    \
    net-misc/openssh    \
    app-arch/cpio

mv /tmp/libltdl.* /usr/lib/
rm -rf /usr/share/{binutils-data,gcc-data}/
rm -f /usr/lib/{?,}crt?.o


sinfo "Unmerging orphaned packages"
emerge -qc --with-bdeps n

if [ -e /usr/bin/perl ]; then
    sinfo "Failed to discard Perl dependencies"
    false
fi


sinfo "Fixing .la files"
rm /usr/lib/libGraphicsMagick*.la /usr/lib/libsox.la
for mod in `find /usr/lib/GraphicsMagick* -name '*.so'`; do
    echo dlname=\'${mod##*/}\' > ${mod%.so}.la
done


# Any problem will cause a fatal error
sinfo "Checking linking consistency"
revdep-rebuild -qi


# Unmerge portage utilities (revdep-rebuild is unavailable afterwards)
sinfo "Unmerging portage tools"
emerge -qC app-portage/gentoolkit


sinfo "Faking Python removal"
dbpython=`mktemp -d`
mv /var/db/pkg/dev-lang/python-* ${dbpython}/python


sinfo "Unmerging orphaned packages"
emerge -qc --with-bdeps n

if [ -e /usr/sbin/python-updater ]; then
    sinfo "Failed to discard Python dependencies"
    false
fi


# Unmerge packages that other package depend upon, but are not needed
# ("emerge -c" cannot be used afterwards)
# Dependencies:
# sandbox        - xz-utils, pax-utils
# portage        - python, sandbox, pax-utils, rsync
sinfo "Unmerging unnecessary packages"
emerge -qC sys-apps/sandbox


sinfo "Updating environment"
env-update


sinfo "Unmerging portage"
sed -i '\:^... /usr/lib/portage/:d' /var/db/pkg/sys-apps/`echo ${ebuild_portage} | sed 's:.*/::; s:\.ebuild$::'`/CONTENTS
FEATURES="${FEATURES} -sandbox -usersandbox" ebuild ${ebuild_portage} unmerge 1>/dev/null
rm -r /usr/lib/portage/


sinfo "Actually removing Python"
rm -f `awk '! /^dir / { print $2 }' ${dbpython}/python/CONTENTS`
rm -r /usr/lib/python*/
rm -r ${dbpython}


sinfo "Verifying HTP servers"
htpservers=`sed -n 's/^SERVERS="\(.*\)"$/\1/p' /etc/conf.d/htpdate`
htpdates=
for htp in ${htpservers}; do
    echo -ne "${htp}:\t"

    # Will fail if the server doesn't provide a timestamp
    htpdate=`curl -sI ${htp} | grep '^Date: ' | sed 's/^Date: //'`
    echo "${htpdate}"

    htpdates="${htpdates} "`date +%s -ud "${htpdate}"`
done

htpmin=`echo ${htpdates} | tr ' ' '\n' | sort -n | head -n 1`
htpmax=`echo ${htpdates} | tr ' ' '\n' | sort -n | tail -n 1`

if [ $[${htpmax} - ${htpmin}] -gt 60 ]; then
    echo "HTP servers disagreement > 1min, fix /etc/conf.d/htpdate"
    false
fi


# Done here because cache may be recreated after "src" phase
sinfo "Trimming icons cache"
find /usr/share/icons -mindepth 1 -maxdepth 1 -type d \
    -exec gtk-update-icon-cache -q -f -i    {} \;
find /usr/share -mindepth 3 -maxdepth 3 -type d -name hicolor \
    -exec gtk-update-icon-cache -q -f -i -t {} \;


# http://www.freedesktop.org/wiki/Specifications/mime-actions-spec
sinfo "Modifying MIME actions ordering preferences"
sed -i 's/\<epdfview.desktop;evince.desktop;/evince.desktop;epdfview.desktop;/ ;
        s/\<gnome-mplayer.desktop;audacious2.desktop;/audacious2.desktop;gnome-mplayer.desktop;/' \
    /usr/share/applications/mimeinfo.cache


sinfo "Uncompressing selected files"
gunzip `find /usr/share/consolefonts -name '*.gz'` \
       `find /usr/share/keymaps      -name '*.gz'`


sinfo "Patching scripts to use dynamic executables"
sed -i 's:\(s\?bin/.*\)\.static:usr/\1:' /sbin/splash-functions.sh
sed -i 's:\.static::' /usr/bin/splash_manager


sinfo "Removing invalid symlinks, dirs and files"
find / -xdev -type l ! -xtype f ! -xtype d ! -xtype c -exec rm {} \;
rmdir /usr/i686-pc-linux-gnu/{bin,lib,}

rm /etc/env.d/05binutils
rm /etc/env.d/05gcc-i686-pc-linux-gnu
rm -rf /etc/env.d/{binutils,gcc,python}

rm /usr/bin/{{i686-pc-linux-gnu-,}{gcc,g++,c++,cpp},cc,gcov}
rm /sbin/fix_libtool_files.sh

rm /usr/bin/{kernel,profile,python}-config
rm /usr/bin/python{,-wrapper}
rm /usr/share/eselect/modules/{binutils,kernel,news,profile,python}.eselect


sinfo "Tighting up SUID permissions"
chgrp cdrom     /usr/{bin/{cdrecord,cdda2wav,readcd},sbin/rscsi}
chmod u+s,o-rwx /usr/{bin/{cdrecord,cdda2wav,readcd},sbin/rscsi}


sinfo "Updating ld cache"
eselect env update 2>/dev/null
sed -i '/^export \(CONFIG_PROTECT\(_MASK\)\?\|MANPATH\|INFOPATH\|CVS_RSH\)=/d' /etc/profile.env


sinfo "Updating init scripts dependencies cache"
depscan.sh


sinfo "Setting dash as /bin/sh"
ln -sf dash /bin/sh
sed -i 's:^#!/bin/sh$:#!/bin/bash:' /lib/udev/move_tmp_persistent_rules.sh


# Spaces in entries are not handled, but it doesn't matter here
sinfo "Saving current packages list in /tmp/packages"
pakdir=/tmp/packages
mkdir ${pakdir}
for p in `find /var/db/pkg/ -mindepth 2 -maxdepth 2 -type d \
          | sed 's:^/var/db/pkg/::'`; do
    sed -n 's/^\(obj\|sym\) \([^ ]\+\).*$/\2/p' /var/db/pkg/${p}/CONTENTS > ${pakdir}/${p//\//=}
done


sinfo "Done."
