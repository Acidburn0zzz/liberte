#!/bin/bash -e

helpdir=${HOME}/helpers


sinfo() {
    echo -e "\033[1;33;41m$@\033[0m"
}


rezip() {
    zip=$1
    dir=${zip}.tmp

    unzip -qd ${dir} ${zip}
    rm ${zip}
    (cd ${dir}; zip -qrm0 ../`basename ${zip}` .)
    rmdir ${dir}
}

regzip() {
    gz=$1

    # -0 switch is unique to pigz
    gunzip  ${gz}
    gzip -0 ${gz%.gz}
}


# Sanity check
if [ ${PHASE} != copy ]; then
    echo "This is phase [${PHASE}], run $0 in phase [copy]."
    exit 1
fi


sinfo "Cleaning up portage configuration"
sed -i /TEMP/d /var/lib/portage/world /etc/portage/package.use


# The dependency patches below are intended for depclean
# (equery requires gentoolkit, so copy ebuilds early)
sinfo "Patching copies of selected ebuilds"
ebuilds="app-misc/ca-certificates
         app-mobilephone/obexftp
         dev-libs/gobject-introspection
         gnome-base/libglade
         gnome-base/librsvg
         media-gfx/exiv2
         media-libs/vips
         media-plugins/gst-plugins-vp8
         net-dialup/pptpclient
         net-im/pidgin
         sys-apps/lm_sensors
         sys-apps/portage
         x11-libs/xcb-util-wm"

# /usr/portage is bind-mounted ro
for ebuild in ${ebuilds}; do
    rsync -a /usr/portage/${ebuild%:*} /usr/local/portage/`dirname ${ebuild}`
    eval ebuild_`basename ${ebuild//[-+:]}`=`equery which ${ebuild}`
done

# Make portage think it doesn't need Python
# (allows depclean after python unmerge + shadow copy)
sed -i 's/[^"]*\${python_dep\(_ssl\)\?}[^"]*//' ${ebuild_portage}

# Python
# exiv2                    not needed                  (#398959, fixed in 0.23)
# libglade:                libglade-convert            (#398955)
# librsvg:                 rsvg                        (#398951, fixed in 2.36.0)
# gobject-introspection:   g-ir-* + giscanner package  (build-time for other pkgs)
# pidgin:                  purple-{url-handler,remote} (#398961)
sed -i 's:^\(inherit\>.*\) python\>:\1:' ${ebuild_libglade} ${ebuild_exiv2} \
                                         ${ebuild_gobjectintrospection} ${ebuild_librsvg}
sed -i 's:\<dev-python/dbus-python\>::'  ${ebuild_pidgin}

# Perl
# pptpclient:              not needed when used by networkmanager-pptp
# lm_sensors:              sensors-detect, sensors-conf-convert
# obexftp:                 not needed (#398113)
sed -i s:dev-lang/perl::                            ${ebuild_lm_sensors} ${ebuild_pptpclient}
sed -i 's/^inherit /GENTOO_DEPEND_ON_PERL="no"\n&/' ${ebuild_obexftp}

# [debianutils]            ca-certificates:  update-ca-certificates
# [xcb-proto]              xcb-util-wm:      not needed              (#398953, upstream)
# [liboil]                 vips:             not needed              (#416815)
sed -i 's:\<sys-apps/debianutils\>::'                    ${ebuild_cacertificates}
sed -i 's:\<x11-proto/xcb-proto\>::'                     ${ebuild_xcbutilwm}
sed -i 's:>=dev-libs/liboil-[^[:blank:]"]*\>::'          ${ebuild_vips}

# [gst-plugins-bad] gst-plugins-vp8: only libgstbasevideo-0.10.so is needed
sed -i 's:>=media-libs/gst-plugins-bad-[^[:blank:]"]*::' ${ebuild_gstpluginsvp8}
sed -i '\:/usr/lib/libgstbasevideo\>:d' /var/db/pkg/media-libs/gst-plugins-bad-*/CONTENTS

for ebuild in ${!ebuild_*}; do
    eval ebuild=\$${ebuild}
    ebuild ${ebuild} manifest
    echo liberte > /var/db/pkg/`echo ${ebuild%.ebuild} | cut -d/ -f5,7`/repository
done
rm -f /var/cache/edb/vdb_*.pickle

# [gettext] coreutils, nano, powertop, cdrtools: not needed (#398983, #398975, #398977, #410501)
echo sys-devel/gettext-0.18.1.1 >> /etc/portage/profile/package.provided

# java-config wrappers are superfluous for minimal VMs (and require Python)
echo dev-java/java-config-2.1.11 >> /etc/portage/profile/package.provided


# This recompiles packages with TEMP flags in package.use
sinfo "Recompiling build-dependent packages"
emerge -quDN @world


sinfo "Compiling Lua scripts"
find /usr/share/libquvi-scripts/lua -type f -name '*.lua' -exec luac -s -o {} {} \;


sinfo "Configuring version-specific paths"
nip2ver=`portageq best_version / media-gfx/nip2`
mv /home/anon/.{nip2,${nip2ver#*/}}


# Unmerge non-runtime dependencies (and cleanup the kernel directory)
sinfo "Unmerging build and temporary dependencies"
emerge -qc --with-bdeps n


sinfo "Copying gcc shared libs"
rsync -aHS `find /usr/lib/gcc -name '*.so' -o -name '*.so.*'` /usr/lib/
ldconfig

echo sys-devel/libtool-2.2.10 >> /etc/portage/profile/package.provided
sed -i '\:/usr/lib/libltdl\>:d' /var/db/pkg/sys-devel/libtool-*/CONTENTS


# Unmerge some packages that are listed in the system profile
# No package can be emerged afterwards
sinfo "Unmerging development packages"

emerge -qC \
    sys-devel/make      \
    sys-devel/gnuconfig \
    sys-devel/patch     \
    \
    sys-devel/gcc       \
    sys-devel/binutils  \
    \
    virtual/os-headers       \
    sys-kernel/linux-headers \
    sys-apps/busybox         \
    \
    virtual/man         \
    sys-apps/man        \
    sys-apps/man-pages  \
    sys-apps/texinfo

rm -rf /usr/share/{binutils-data,gcc-data}/
rm -f /usr/lib/{?,}crt?.o


sinfo "Unmerging orphaned packages"
emerge -qc --with-bdeps n


if [ -e /usr/bin/perl ]; then
    sinfo "Failed to discard Perl dependencies"
    false
fi

if [ -e /usr/bin/gettext ]; then
    sinfo "Failed to discard gettext dependencies"
    false
fi

if [ -e /usr/bin/run-java-tool  -o  -e /usr/bin/java-config ]; then
    sinfo "Failed to discard Java dependencies"
    false
fi


sinfo "Fixing Ambiance/Radiance themes for GTK-3.2"
sed -i 's/\([0-9]\)px/\1/g' /usr/share/themes/{Radiance,Ambiance}*/gtk-3.0/{,apps/}*.css
truncate -s 0 /usr/share/themes/{Radiance,Ambiance}*/gtk-3.0/{gtk-widgets-backdrop,apps/{nautilus,gnome-panel}}.css


# Any problem will cause a fatal error
sinfo "Checking linking consistency"
revdep-rebuild -qi


# Unmerge portage utilities (revdep-rebuild is unavailable afterwards)
sinfo "Unmerging portage tools"
emerge -qC app-portage/gentoolkit


sinfo "Faking Python removal"
dbpython=`mktemp -d`
mv /var/db/pkg/dev-lang/python-* ${dbpython}


sinfo "Unmerging orphaned packages"
emerge -qc --with-bdeps n

if [ -e /usr/sbin/python-updater  -o  -e /usr/bin/python-wrapper ]; then
    sinfo "Failed to discard Python dependencies"
    false
fi

ln -sf python3 /usr/bin/python


# Unmerge packages that other package depend upon, but are not needed
# ("emerge -c" cannot be used afterwards)
# Dependencies:
# sandbox        - xz-utils, pax-utils
# portage        - python, sandbox, pax-utils, rsync
sinfo "Unmerging unnecessary packages"
emerge -qC sys-apps/sandbox


sinfo "Updating environment"
env-update


sinfo "Unmerging portage"
sed -i '\:^... /usr/lib/portage/:d' /var/db/pkg/sys-apps/`echo ${ebuild_portage} | sed 's:.*/::; s:\.ebuild$::'`/CONTENTS
FEATURES="${FEATURES} -sandbox -usersandbox" ebuild ${ebuild_portage} unmerge 1>/dev/null
rm -r /usr/lib/portage/


sinfo "Actually removing Python"
rm -f `awk '! /^dir / { print $2 }' ${dbpython}/python-*/CONTENTS`
rm -r /usr/lib/python*/
rm -r ${dbpython}


# Done here because cache may be recreated after "src" phase
sinfo "Trimming icons directories and cache"
for theme in /usr/share/icons/*/index.theme; do
    find `dirname ${theme}` -maxdepth 1 \( -name '[5-9][0-9]x*' -o -name '[1-9][0-9][0-9]x*' \) -exec rm -r {} \;

    # Remove all icons > 48x48 from the theme
    awk '/^\[/ { x=1; if(match($0,/^\[([0-9]+)x/,ar) != 0 && ar[1]>48) x=42; } { if (x!=42) print; }' ${theme} \
        | sed 's/,\([5-9][0-9]\|[1-9][0-9][0-9]\)x[^,]*//g; s/\(=16,22,32,48\),.*/\1/' > ${theme}.new
    mv ${theme}.new ${theme}
done

find /usr/share/icons -mindepth 1 -maxdepth 1 -type d \
    -exec gtk-update-icon-cache -q -f -i    {} \;
find /usr/share -mindepth 3 -type d -name hicolor \
    -exec gtk-update-icon-cache -q -f -i -t {} \;


sinfo "Regenerating fonts cache"
fc-cache -fs


sinfo "Regenerating MIME and desktop DBs"
update-mime-database       /usr/share/mime
update-desktop-database -q /usr/share/applications


# http://www.freedesktop.org/wiki/Specifications/mime-actions-spec
sinfo "Modifying MIME actions ordering preferences"
sed -i 's/\<geeqie.desktop;gpicview.desktop;/gpicview.desktop;geeqie.desktop;/ ;
        s/\<totem.desktop;audacious.desktop;/audacious.desktop;totem.desktop;/ ;
        s/\<file-roller.desktop;evince.desktop;/evince.desktop;file-roller.desktop;/' \
    /usr/share/applications/mimeinfo.cache


# QuickTime (MP4) prevents HTML5 <video> from working
sinfo "Generating GStreamer cache"
rm -rf /var/cache/gstreamer
/usr/bin/gst-inspect* 1>/dev/null
chmod -R go=u,go-w /var/cache/gstreamer


sinfo "Generating GIO modules cache"
gio-querymodules /usr/lib/gio/modules


sinfo "Uncompressing selected files"
gunzip `find /usr/share/consolefonts -name '*.gz'` \
       `find /usr/share/keymaps      -name '*.gz'`

gunzip /usr/share/gedit-2/plugins/taglist/*.gz

rezip  /usr/gnu-classpath-[0-9]*/share/classpath/glibj.zip
rezip  /usr/lib/jamvm/classes.zip

rezip  /usr/share/zlibrary/hyphenationPatterns.zip
rezip  /usr/share/zlibrary/languagePatterns.zip
regzip /usr/share/zlibrary/unicode.xml.gz

rezip /usr/share/java-service-wrapper/lib/wrapper.jar
for jar in /opt/i2p/lib/*.jar /opt/i2p/webapps/*.war; do
    rezip ${jar}
done


# (#400921, #398931)
sinfo "Fixing init.d services Bash-dependent checks"
sed -i 's/\<need[[:blank:]]\+root\>/use root/; s/-w "\$RC_LIBEXECDIR"/-z 1/' \
       /etc/init.d/{consolefont,keymaps,termencoding}


sinfo "Creating specialized Xorg driver directories"
mkdir /usr/lib/xorg/modules/drivers.{native,vesa,fbdev}
ln    /usr/lib/xorg/modules/drivers{/*.so,.native}
mv    /usr/lib/xorg/modules/drivers{.native/vesa_drv.so,.vesa}
mv    /usr/lib/xorg/modules/drivers{.native/fbdev_drv.so,.fbdev}


sinfo "Replacing laptop-mode drive-waking hdparm calls"
sed -i 's/\<hdparm -[SW]\>/fast-&/' /usr/share/laptop-mode-tools/modules/hdparm


# /run/lock prevents a dangling symlink
sinfo "Initializing /run"
rm -r /run
mkdir -p -m 775 /run/lock
chown root:uucp /run/lock


sinfo "Symlinking /var/tmp and disabling /dev/shm mount"
rm -r /var/tmp
ln -s ../tmp /var/tmp
sed -i 's/\<tmpfs\>/disabled/' /etc/init.d/devfs


sinfo "Setting sh (dash) and java (jamvm) symlinks"
ln -sf dash                          /bin/sh
ln -s  ../local/libexec/java.wrapper /usr/bin/java


sinfo "Setting cables-related and /root permissions"
chmod 710 /home/anon{,/persist{,/security{,/cable},/mail,/cables}}
chmod -R go= /root
# (#431920)
chmod go=u-w /var/log/wimax


sinfo "Removing invalid symlinks, dirs and files"
find  /usr/i686-pc-linux-gnu -xtype l -delete
rmdir /usr/i686-pc-linux-gnu/{bin,lib,}

rm -r /etc/env.d/{05binutils,04gcc-i686-pc-linux-gnu,binutils,gcc,python}
rm /etc/{init,conf,pam}.d/sshd

rm /usr/bin/{{i686-pc-linux-gnu-,}{gcc,g++,c++,cpp},cc,c89,c99,gcov} /lib/cpp
rm /usr/sbin/fix_libtool_files.sh

rm /usr/bin/{kernel,profile,python}-config
rm /usr/share/eselect/modules/{binutils,kernel,news,profile}.eselect

find / -xdev -xtype l -delete


sinfo "Updating ld cache"
eselect env update 2>/dev/null
sed -i '/^export \(CONFIG_PROTECT\(_MASK\)\?\|MANPATH\|INFOPATH\|CVS_RSH\)=/d' /etc/profile.env


sinfo "Updating init scripts dependencies cache"
rc-update -u


# Spaces in entries are not handled, but it doesn't matter here
sinfo "Saving current packages list in /tmp/transient/pkg"
rm -rf /tmp/transient
pakdir=/tmp/transient/pkg
mkdir -p ${pakdir}
for p in `find /var/db/pkg -mindepth 2 -maxdepth 2 -type d -printf '%P\n'`; do
    sed -n 's/^\(obj\|sym\) \([^ ]\+\).*$/\2/p' /var/db/pkg/${p}/CONTENTS > ${pakdir}/${p//\//=}
done


sinfo "Done."
