#!/bin/bash -e

sinfo() {
    echo -e "\033[1;33;41m$@\033[0m"
}


rezip() {
    zip=$1
    dir=${zip}.tmp

    unzip -qd ${dir} ${zip}
    rm ${zip}
    (cd ${dir}; zip -qrm0 ../`basename ${zip}` .)
    rmdir ${dir}
}

regzip() {
    gz=$1

    # -0 switch is unique to pigz
    gunzip  ${gz}
    gzip -0 ${gz%.gz}
}


# Sanity check
if [ ${PHASE} != copy ]; then
    echo "This is phase [${PHASE}], run $0 in phase [copy]."
    exit 1
fi


sinfo "Cleaning up portage configuration"
sed -i '/^@temporary$/d' /etc/portage/sets/all
rm /etc/portage/package.use/temporary


# The dependency patches below are intended for depclean
# (equery requires gentoolkit, so copy ebuilds early)
sinfo "Patching copies of selected ebuilds"
ebuilds="app-misc/ca-certificates
         app-mobilephone/obexftp
         dev-libs/gobject-introspection
         gnome-base/libglade
         media-gfx/exiv2
         media-libs/vips
         net-dialup/pptpclient
         net-im/pidgin
         net-misc/proxychains
         net-wireless/wimax
         sys-apps/lm_sensors
         sys-apps/portage
         x11-libs/xcb-util-wm"

# /usr/portage is bind-mounted ro
for ebuild in ${ebuilds}; do
    rsync -a /usr/portage/${ebuild%:*} /usr/local/portage/`dirname ${ebuild}`
    eval ebuild_`basename ${ebuild//[-+:]}`=`equery which ${ebuild}`
done

# Make portage think it doesn't need Python
# (allows depclean after python unmerge + shadow copy)
sed -i 's/[^"]*\(\${python_dep\(_ssl\)\?}\|\<xattr?\)[^"]*//' ${ebuild_portage}

# Python
# exiv2                    not needed                  (#398959, fixed in 0.23)
# libglade:                libglade-convert            (#398955)
# gobject-introspection:   g-ir-* + giscanner package  (build-time for other pkgs)
# pidgin:                  purple-{url-handler,remote} (#398961)
sed -i 's:^\(inherit\>.*\) python\>:\1:' ${ebuild_libglade} ${ebuild_exiv2} \
                                         ${ebuild_gobjectintrospection}
sed -i 's:\<dev-python/dbus-python\>::'  ${ebuild_pidgin}

# Perl
# pptpclient:              not needed when used by networkmanager-pptp
# lm_sensors:              sensors-detect, sensors-conf-convert
# obexftp:                 not needed (#398113)
sed -i s:dev-lang/perl::                            ${ebuild_lm_sensors} ${ebuild_pptpclient}
sed -i 's/^inherit /GENTOO_DEPEND_ON_PERL="no"\n&/' ${ebuild_obexftp}

# [debianutils]            ca-certificates:  update-ca-certificates
# [xcb-proto]              xcb-util-wm:      not needed              (#398953, upstream)
# [liboil]                 vips:             not needed              (#416815)
# [linux-headers]          wimax:            not needed              (#431988)
# [bind-tools]             proxychains:      not needed              (proxyresolv -> tor-resolve)
sed -i 's:\<sys-apps/debianutils\>::'                    ${ebuild_cacertificates}
sed -i 's:\<x11-proto/xcb-proto\>::'                     ${ebuild_xcbutilwm}
sed -i 's:>=dev-libs/liboil-[^[:blank:]"]*\>::'          ${ebuild_vips}
sed -i 's:>=sys-kernel/linux-headers-[^[:blank:]"]*\>::' ${ebuild_wimax}
sed -i 's:\<net-dns/bind-tools\>::'                      ${ebuild_proxychains}

for ebuild in ${!ebuild_*}; do
    eval ebuild=\$${ebuild}
    ebuild ${ebuild} manifest
    echo liberte > /var/db/pkg/`echo ${ebuild%.ebuild} | cut -d/ -f5,7`/repository
done
rm -f /var/cache/edb/vdb_*.pickle

# [gettext] coreutils, powertop, cdrtools: not needed (#398983, #398977 (fixed in 2.2-r1), #410501)
echo sys-devel/gettext-0.18.1.1 >> /etc/portage/profile/package.provided


# This recompiles packages with TEMP flags in package.use
sinfo "Recompiling build-dependent packages"
emerge -quDN @world


# (#432020)
# sinfo "Creating NSS databases"
# make -C /var/db > /dev/null


sinfo "Compiling Lua scripts"
find /usr/share/libquvi-scripts/lua -type f -name '*.lua' -exec luac -s -o {} {} \;


sinfo "Configuring version-specific paths"
nip2ver=`portageq best_version / media-gfx/nip2`
mv /home/anon/.{nip2,${nip2ver#*/}}


sinfo "Keeping gcc/libtool shared libs"
sed -i '\:^... /usr/lib/gcc/.*\.so\>:d'    /var/db/pkg/sys-devel/gcc-[0-9]*/CONTENTS
sed -i '\:^... /usr/lib/libltdl.*\.so\>:d' /var/db/pkg/sys-devel/libtool-[0-9]*/CONTENTS
echo sys-devel/libtool-2.2.10 >> /etc/portage/profile/package.provided


sinfo "Unmerging build and temporary dependencies"
mv /etc/portage/profile/packages{.off,}
emerge -qc --with-bdeps n


# Any problem will cause a fatal error
sinfo "Checking linking consistency"
revdep-rebuild -qi


sinfo "Faking Python removal"
dbpython=`mktemp -d`
mv /var/db/pkg/dev-lang/python-* ${dbpython}


# Will fail if there are still Python dependencies
# revdep-rebuild is unavailable after this point
sinfo "Unmerging orphaned packages"
sed -i '/^@temporary-late$/d' /etc/portage/sets/all
emerge -qc --with-bdeps n

ln -s python3 /usr/bin/python-wrapper


# Dependencies:
# sandbox: -
# portage: [python], sandbox, pax-utils
sinfo "Unmerging portage sandbox"
emerge -qC sys-apps/sandbox


sinfo "Removing development files"
rm /etc/env.d/{??binutils,??gcc-i686-pc-linux-gnu}
rm /lib/cpp /usr/bin/cc
for f in /usr/bin/i686-pc-linux-gnu-*; do
    rm ${f} /usr/bin/${f#/usr/bin/i686-pc-linux-gnu-}
done


sinfo "Updating environment"
env-update


sinfo "Unmerging portage"
sed -i '\:^... /usr/lib/portage/:d' /var/db/pkg/`echo ${ebuild_portage%.ebuild} | cut -d/ -f5,7`/CONTENTS
FEATURES="${FEATURES} -sandbox -usersandbox" ebuild ${ebuild_portage} unmerge 1>/dev/null
rm -r /usr/lib/portage/


sinfo "Actually removing Python"
rm -f `awk '! /^dir / { print $2 }' ${dbpython}/python-*/CONTENTS`
rm -r /usr/lib/python*/ /usr/include/python*/
rm -r ${dbpython}


sinfo "Trimming icons directories and cache"
for theme in /usr/share/icons/*/index.theme; do
    find `dirname ${theme}` -maxdepth 1 \( -name '[5-9][0-9]x*' -o -name '[1-9][0-9][0-9]x*' \) -exec rm -r {} \;

    # Remove all icons > 48x48 from the theme
    awk '/^\[/ { x=1; if(match($0,/^\[([0-9]+)x/,ar) != 0 && ar[1]>48) x=42; } { if (x!=42) print; }' ${theme} \
        | sed 's/,\([5-9][0-9]\|[1-9][0-9][0-9]\)x[^,]*//g; s/\(=16,22,32,48\),.*/\1/' > ${theme}.new
    mv ${theme}.new ${theme}
done

find /usr/share/icons -mindepth 1 -maxdepth 1 -type d \
    -exec gtk-update-icon-cache -q -f -i    {} \;
find /usr/share -mindepth 3 -type d -name hicolor \
    -exec gtk-update-icon-cache -q -f -i -t {} \;


sinfo "Regenerating fonts cache"
fc-cache -fs


sinfo "Regenerating MIME and desktop DBs"
update-mime-database       /usr/share/mime
update-desktop-database -q /usr/share/applications


# http://www.freedesktop.org/wiki/Specifications/mime-actions-spec
sinfo "Modifying MIME actions ordering preferences"
sed -i 's/\<geeqie.desktop;gpicview.desktop;/gpicview.desktop;geeqie.desktop;/ ;
        s/\<totem.desktop;audacious.desktop;/audacious.desktop;totem.desktop;/ ;
        s/\<file-roller.desktop;evince.desktop;/evince.desktop;file-roller.desktop;/' \
    /usr/share/applications/mimeinfo.cache


sinfo "Generating GIO modules cache"
gio-querymodules /usr/lib/gio/modules


sinfo "Generating GStreamer cache"
rm -rf /var/cache/gstreamer
/usr/bin/gst-inspect* 1>/dev/null
chmod -R go=u,go-w /var/cache/gstreamer


sinfo "Uncompressing selected files"
gunzip `find /usr/share/consolefonts -name '*.gz'` \
       `find /usr/share/keymaps      -name '*.gz'`

gunzip /usr/share/gedit-2/plugins/taglist/*.gz

rezip  /usr/share/zlibrary/hyphenationPatterns.zip
rezip  /usr/share/zlibrary/languagePatterns.zip
regzip /usr/share/zlibrary/unicode.xml.gz


sinfo "Creating specialized Xorg driver directories"
mkdir /usr/lib/xorg/modules/drivers.{native,vesa,fbdev,modesetting}
ln    /usr/lib/xorg/modules/drivers{/*.so,.native}
mv    /usr/lib/xorg/modules/drivers{.native/vesa_drv.so,.vesa}
mv    /usr/lib/xorg/modules/drivers{.native/fbdev_drv.so,.fbdev}
mv    /usr/lib/xorg/modules/drivers{.native/modesetting_drv.so,.modesetting}


sinfo "Symlinking /var/tmp and disabling /dev/shm mount"
rm -r /var/tmp
ln -s ../tmp /var/tmp
sed -i 's/\<tmpfs\>/disabled/' /etc/init.d/devfs


sinfo "Setting cables-related and /root permissions"
chmod 710 /home/anon{,/persist{,/security{,/cable},/mail,/cables}}
chmod -R go= /root


sinfo "Removing invalid symlinks"
find / -xdev -xtype l -delete


sinfo "Updating ld cache"
eselect env update 2>/dev/null
sed -i '/ CONFIG_PROTECT\(_MASK\)\?[ =]/d' /etc/{profile,csh}.env


# Spaces in entries are not handled, but it doesn't matter here
sinfo "Saving current packages list in /tmp/transient/pkg"
rm -rf /tmp/transient
pakdir=/tmp/transient/pkg
mkdir -p ${pakdir}
for p in `find /var/db/pkg -mindepth 2 -maxdepth 2 -type d -printf '%P\n'`; do
    sed -n 's/^\(obj\|sym\) \([^ ]\+\).*$/\2/p' /var/db/pkg/${p}/CONTENTS > ${pakdir}/${p//\//=}
done


sinfo "Done."
