#!/bin/sh -e

# This script is executed with root privileges,
# so be careful with externally supplied files.

# ${tordir} and ${htpdir} must exist!

export LC_ALL=C

inotifytimeout=60

tordir=/var/lib/tor/data
consensus=${tordir}/cached-consensus
uvconsensus=${tordir}/unverified-consensus
descriptors=${tordir}/cached-descriptors

htpdir=/var/run/htpdate
htpflag=${htpdir}/timeset.flag

tag=tordate
datere='[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9]'


# Delegate time setting to other daemons if Tor connections work
if [ -e ${descriptors} ]; then
    logger -p 6 -t ${tag} "Tor has already opened a circuit"
else

    # Wait for the consensus file, which contains a valid time interval
    while :; do
        if grep -qs "^valid-until ${datere}"'$' ${consensus} ${uvconsensus}; then
            break;
        fi

        inotifywait -qq -t ${inotifytimeout} -e close_write -e moved_to ${tordir} || :
    done

    # Use unverified consensus if possible (when time is far off into future, or when
    # it wasn't removed yet), but work with a hardlink to prevent removal in-process
    if [ ! -e ${consensus} ]  &&  ln ${uvconsensus} ${uvconsensus}.bak 2>/dev/null; then
        logger -p 6 -t ${tag} "Using unverified Tor consensus"
        consensus=${uvconsensus}.bak
    fi


    # Get various date points in Tor's format, and do some sanity checks
    vstart=`sed -n "/^valid-after \(${datere}\)"'$/s//\1/p; t q; b n; :q q; :n' ${consensus}`
    vend=`sed -n "/^valid-until \(${datere}\)"'$/s//\1/p; t q; b n; :q q; :n' ${consensus}`
    vendchk=`date -ud "${vstart} -0300" +'%F %T'`

    rm -f ${uvconsensus}.bak

    if [ x"${vstart}" = x  -o  x"${vend}" = x  -o  x"${vend}" != x"${vendchk}" ]; then
        logger -p 3 -t ${tag} "Unexpected valid-until: [${vend}] is not [${vendchk}]"
    else

        # Check whether current time is in (conservative) range
        curdate=`date -u +'%F %T'`
        vendcons=`date -ud "${vstart} -0230" +'%F %T'`

        order="${vstart}
${curdate}
${vendcons}"
        ordersrt=`echo "${order}" | sort`

        if [ "${order}" = "${ordersrt}" ]; then
            logger -p 6 -t ${tag} "Current time is in valid Tor range"
        else

            # Estimate time to the middle of the range
            vmid=`date -ud "${vstart} -0130" +'%F %T'`
            logger -p 6 -t ${tag} "Setting time to middle of valid Tor range: [${vmid}]"
            date -us "${vmid}" 1>/dev/null


            # Tor is unreliable with picking a circuit after time change
            if /etc/init.d/tor -q status; then
                logger -p 6 -t ${tag} "Restarting Tor service"
                /etc/init.d/tor -q restart
            fi

        fi

    fi

fi


# At the cost of a miniscule race condition probability, do not restart I2P
# when tordate service is run again for some reason.
if [ -e ${htpflag} ]; then
    logger -p 6 -t ${tag} "HTP has already set the time"
else

    # Wait for the HTP flag file, which indicates that correct time has been set
    while :; do
        if [ -e ${htpflag} ]; then
            break;
        fi

        inotifywait -qq -t ${inotifytimeout} -e create ${htpdir} || :
    done

    # I2P is unreliable with correcting internal clock after time change
    if /etc/init.d/i2p -q status; then
        logger -p 6 -t ${tag} "Restarting I2P service"
        /etc/init.d/i2p -q restart
    fi

fi
