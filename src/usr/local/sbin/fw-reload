#!/bin/sh -e

luser=anon
nofw=nofw
cable=cable

# ReachableAddresses ports in /etc/tor/torrc [uid=tor]
torports=80,443

# VPN TCP/UDP server ports (PPTP, OpenVPN, Cisco) [uid=root]
vpntports=https,imaps,1723,openvpn,10000
vpnuports=openvpn,1149,isakmp,ipsec-nat-t,10000

# Ports used by HotSpot registration pages [uid=nofw]
hotspot=http,https,webcache,tproxy,3128,3660,8088,11523,58080,1024:65535

# Ports used by I2P outbound connections (via Tor; don't assume the default random ports) [uid=i2p]
i2ptports=https,8887,9000:31000,1024:65535

# LED blinking delay
leddelay=500


# Default policies
iptables -P INPUT   DROP
iptables -P FORWARD DROP
iptables -P OUTPUT  DROP

iptables -t nat -P PREROUTING  ACCEPT
iptables -t nat -P INPUT       ACCEPT
iptables -t nat -P OUTPUT      ACCEPT
iptables -t nat -P POSTROUTING ACCEPT

# Flush all rules
iptables -F
iptables -X

iptables -t nat -F
iptables -t nat -X

# Define custom chains
iptables -N LOGDROP
iptables -N LOGREJECT


# --- Packet dropping ---
# iptables -A LOGDROP   -j LOG      --log-prefix "fw-drop: " --log-level debug --log-uid
iptables -A LOGDROP   -j LED    --led-trigger-id drop    --led-delay ${leddelay}
iptables -A LOGDROP   -j DROP

iptables -A LOGREJECT -j LOG    --log-prefix "fw-deny: " --log-level debug --log-uid
iptables -A LOGREJECT -j LED    --led-trigger-id drop    --led-delay ${leddelay}
iptables -A LOGREJECT -j REJECT --reject-with icmp-admin-prohibited


# --- IP ---

# Allow existing/related connections packets through (TCP + UDP-in + GRE/ESP + ICMP-in errors)
iptables -A INPUT  -p tcp  -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -p tcp  -m state --state ESTABLISHED,RELATED -j ACCEPT

iptables -A INPUT  -p udp  -m state --state ESTABLISHED,RELATED -j ACCEPT

iptables -A INPUT  -p gre  -m state --state ESTABLISHED,RELATED     -j ACCEPT
iptables -A OUTPUT -p gre  -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT

iptables -A INPUT  -p esp  -m state --state ESTABLISHED,RELATED     -j ACCEPT
iptables -A OUTPUT -p esp  -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT

iptables -A INPUT  -p icmp --icmp-type destination-unreachable -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT  -p icmp --icmp-type time-exceeded           -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT  -p icmp --icmp-type source-quench           -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT  -p icmp --icmp-type parameter-problem       -m state --state ESTABLISHED,RELATED -j ACCEPT

# Allow rate-limited incoming unicast ICMP ping, and related echo reply
iptables -A INPUT  -p icmp --icmp-type echo-request -m addrtype --dst-type LOCAL -m limit --limit 20/minute -j ACCEPT
iptables -A OUTPUT -p icmp --icmp-type echo-reply   -m state --state ESTABLISHED,RELATED -j ACCEPT


# --- Loopback ---
# NOTE: owner match doesn't work with the INPUT chain

# NTP server [disabled] modification permission to ntpd user only (or root in pre-DNS phase)
# iptables -A OUTPUT -o lo -p udp -m owner --uid-owner root -d 127.0.0.1 --dport ntp -j ACCEPT
# iptables -A OUTPUT -o lo -p udp -m owner --uid-owner ntp  -d 127.0.0.1 --dport ntp -j ACCEPT
# iptables -A OUTPUT -o lo -p udp                           -d 127.0.0.1 --dport ntp -j LOGREJECT

# Hidden service server access only for Tor and I2P
iptables -A OUTPUT -o lo -p tcp -m owner --uid-owner tor      --syn -d 127.0.0.1 --dport 9080 -j ACCEPT
iptables -A OUTPUT -o lo -p tcp -m owner --uid-owner i2p      --syn -d 127.0.0.1 --dport 9080 -j ACCEPT
iptables -A OUTPUT       -p tcp                               --syn -d 127.0.0.1 --dport 9080 -j LOGREJECT

# Privoxy access only for main user, HTP and cables daemon
iptables -A OUTPUT -o lo -p tcp -m owner --uid-owner ${luser} --syn -d 127.0.0.1 --dport 8118 -j ACCEPT
iptables -A OUTPUT -o lo -p tcp -m owner --uid-owner ${cable} --syn -d 127.0.0.1 --dport 8118 -j ACCEPT
iptables -A OUTPUT -o lo -p tcp -m owner --uid-owner htp      --syn -d 127.0.0.1 --dport 8118 -j ACCEPT
iptables -A OUTPUT       -p tcp                               --syn -d 127.0.0.1 --dport 8118 -j LOGREJECT

# Tor access via SOCKS only for main user and Privoxy
iptables -A OUTPUT -o lo -p tcp -m owner --uid-owner ${luser} --syn -d 127.0.0.1 --dport 9050 -j ACCEPT
iptables -A OUTPUT -o lo -p tcp -m owner --uid-owner privoxy  --syn -d 127.0.0.1 --dport 9050 -j ACCEPT
iptables -A OUTPUT       -p tcp                               --syn -d 127.0.0.1 --dport 9050 -j LOGREJECT

# Tor control port access only for Tor user
iptables -A OUTPUT -o lo -p tcp -m owner --uid-owner tor      --syn -d 127.0.0.1 --dport 9051 -j ACCEPT
iptables -A OUTPUT       -p tcp                               --syn -d 127.0.0.1 --dport 9051 -j LOGREJECT

# Tor access via transparent proxy only for I2P (redirected from an external interface)
iptables -A OUTPUT ! -o lo -p tcp -m owner --uid-owner i2p    --syn -d 127.0.0.1 --dport 9040 -j ACCEPT
iptables -A OUTPUT         -p tcp                             --syn -d 127.0.0.1 --dport 9040 -j LOGREJECT

# I2P ports access only for main user, Privoxy and I2P (selective)
# http://www.i2p2.de/faq.html#ports (routerconsole=7657 is disabled in I2P config)
iptables -A OUTPUT -o lo -p tcp -m owner --uid-owner ${luser} --syn -d 127.0.0.1 -m multiport --dports 7657,4444,4445,6668,7659,7660            -j ACCEPT
iptables -A OUTPUT -o lo -p tcp -m owner --uid-owner privoxy  --syn -d 127.0.0.1 -m multiport --dports 7657,4444,4445                           -j ACCEPT
iptables -A OUTPUT -o lo -p tcp -m owner --uid-owner i2p      --syn -d 127.0.0.1 -m multiport --dports 7654,4444,32000                          -j ACCEPT
iptables -A OUTPUT       -p tcp                               --syn -d 127.0.0.1 -m multiport --dports 7657,4444,4445,6668,7659,7660,7654,32000 -j LOGREJECT

# Pass other loopback packets through
iptables -A INPUT  -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT


# --- External Communications ---

# DHCP and NTP client [disabled] communication
iptables -A OUTPUT -p udp                              --sport bootpc --dport bootps -j ACCEPT
# iptables -A OUTPUT -p udp                              --sport ntp    --dport ntp    -j ACCEPT

# DNS use for NTP server [disabled, resolves as root] and non-firewalled user.
# NOTE: uid-owner does not work for dns with nscd (disabled in /etc/nscd.conf)
iptables -A OUTPUT -p udp -m owner --uid-owner ${nofw}       --dport domain -j ACCEPT
iptables -A OUTPUT -p tcp -m owner --uid-owner ${nofw} --syn --dport domain -j ACCEPT

# VPN connections (root-initiated)
iptables -A OUTPUT -p tcp -m owner --uid-owner root    --syn -m multiport --dports ${vpntports} -j ACCEPT
iptables -A OUTPUT -p udp -m owner --uid-owner root          -m multiport --dports ${vpnuports} -j ACCEPT

# Let Tor initiate connections to its ReachableAddresses ports
iptables -A OUTPUT -p tcp -m owner --uid-owner tor     --syn -m multiport --dports ${torports}  -j ACCEPT

# HTTP(S) (including HotSpot ports) communication for non-firewalled user
iptables -A OUTPUT -p tcp -m owner --uid-owner ${nofw} --syn -m multiport --dports ${hotspot}   -j ACCEPT

# I2P user communication via Tor's transparent proxy
# https://trac.torproject.org/projects/tor/wiki/doc/TransparentProxy
iptables -t nat -A OUTPUT ! -o lo -p tcp -m owner --uid-owner i2p --syn -m multiport --dports ${i2ptports} -j REDIRECT --to-ports 9040

# Log all other packets
iptables -A INPUT   -j LOGDROP
iptables -A FORWARD -j LOGDROP
iptables -A OUTPUT  -j LOGREJECT


# --- LED blinking ---

# Assign "drop" trigger to any unused leds
for ledtrigger in /sys/class/leds/*/trigger; do
    if grep -qs '\[none\]' "${ledtrigger}"; then
        echo netfilter-drop > "${ledtrigger}"
    fi
done
