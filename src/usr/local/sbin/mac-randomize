#!/bin/sh -e

# This script should be safe to run via sudo
# (with env_reset and secure_path set)

export LC_ALL=C


if [ $# != 1  -a  $# != 2 ]; then
    cat<<EOF
Format: sudo mac-randomize all
        sudo mac-randomize wireless
        sudo mac-randomize <interface> XX:XX:XX:XX:XX:XX

Changing a MAC address on an interface will reset all its connections.
EOF
    exit 1
fi


# Sanitize input, and extract parameters
ifaces=`find /sys/class/net -xdev -mindepth 1 -maxdepth 1 ! -lname '*/virtual/*' -printf '%f\n'`
mac=

# ${ifaces} contains the (possibly empty) interfaces list
# ${mac} contains the MAC address (${ifaces} has one interface then)
if [ $# = 1 ]; then
    if [ X"$1" = Xwireless ]; then
        # Rely on the deprecated WIRELESS_EXT_SYSFS in kernel
        ifaces2=
        for iface in ${ifaces}; do
            if [ -e /sys/class/net/${iface}/wireless ]; then
                ifaces2="${ifaces2}${iface} "
            fi
        done
        ifaces="${ifaces2}"
    elif [ X"$1" != Xall ]; then
        echo "Incorrect first parameter"
        exit 1
    fi
else
    selected=
    for iface in ${ifaces}; do
        if [ X"$1" = X${iface} ]; then
            selected=${iface}
        fi
    done

    if [ -z "${selected}" ]; then
        echo "No such interface"
        exit 1
    fi

    ifaces=${selected}

    if [ ${#2} != 17 ]; then
        echo "Incorrect MAC address length"
        exit 1
    fi

    mac=`echo x "$2" | tr -cd '[:xdigit:]:' | tr A-F a-f`

    if [ ${#2} != ${#mac} ] || \
            ! echo "${mac}" | egrep -q '^([[:xdigit:]]{2}:){5}[[:xdigit:]]{2}$'; then
        echo "Incorrect MAC address format"
        exit 1
    fi
fi


# MAC getter via sysfs
mac_get() {
    local iface=$1

    if [ "`cat /sys/class/net/${iface}/addr_len`" != 6 ]; then
        false
    else
        cat /sys/class/net/${iface}/address
    fi
}


# Change addresses
if [ -n "${ifaces}" ]; then
    wireless=0
    wired=0
    for iface in ${ifaces}; do

        if [ -e /sys/class/net/${iface}/wireless ]; then
            wireless=1
            echo "Wireless interface: ${iface}"
        else
            wired=1
            echo "Interface: ${iface}"
        fi

        if [ -z "${mac}" ]; then
            newmac=`mac_get ${iface} | cut -d: -f1-3`:`RANDFILE=/dev/null openssl rand -hex 3 | sed 's/^\(..\)\(..\)\(..\)$/\1:\2:\3/'`
        else
            newmac=${mac}
        fi

        if [ ${#newmac} != 17 ]; then
            echo "Incorrect MAC address length (internal error)"
            exit 1
        fi

        ifconfig ${iface} down
        ifconfig ${iface} hw ether ${newmac}
        ifconfig ${iface} up
    done

    if [ ${wired} = 1  -a  -e /var/lib/init.d/started/NetworkManager ]; then
        echo "Restarting NetworkManager"
        /etc/init.d/NetworkManager restart --quiet
    elif [ ${wireless} = 1 ] && pgrep -u root -x wpa_supplicant 1>/dev/null; then
        echo "Killing wpa_supplicant"
        pkill -u root -x wpa_supplicant
    fi
fi
